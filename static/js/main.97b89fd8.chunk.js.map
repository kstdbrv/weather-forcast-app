{"version":3,"sources":["axios/axios.js","store/actions/actionTypes.tsx","store/actions/app.tsx","store/actions/getWeather.tsx","components/select-city/SelectCity.tsx","components/loader/Loader.tsx","utils/utils.js","components/unit-forecast/unit-forecast.js","assets/images/placeholder.svg","components/placeholder/Placeholder.tsx","components/card-forcast/CardForcast.js","store/actions/getLocation.tsx","components/select-city-past/selectCityPast.tsx","components/select-date/SelectDate.js","store/actions/getDate.tsx","components/unit-past/UnitPast.js","components/card-past/CardPast.js","components/header/Header.tsx","components/footer/Footer.tsx","App.tsx","store/reducers/app.tsx","store/reducers/forecastData.tsx","store/reducers/pastData.tsx","store/reducers/pastCard.tsx","store/reducers/rootReducer.tsx","reportWebVitals.ts","index.tsx"],"names":["axios","create","baseURL","source","CancelToken","isCancel","SHOW_LOADER_FORECAST","SHOW_LOADER_PAST","HIDE_LOADER_FORECAST","HIDE_LOADER_PAST","FETCH_7DAYSFORECAST","FETCH_PAST_FORECAST","GET_DATE","GET_LOCATION","showLoaderForcast","type","hideLoaderForcast","hideLoaderPast","API_KEY","process","fetch7DayForecast","lat","lon","part","dispatch","a","url","get","cancelToken","token","response","data","console","log","message","fetchPastForecast","getState","pastCardInfo","unixDate","cityLocation","CITIES","name","disabled","hidden","SelectCity","useDispatch","cls","Object","keys","length","className","onChange","e","target","value","join","defaultValue","map","option","Loader","getDate","unixTimestamp","date","Date","dd","yyyy","getFullYear","getMonth","toStrMonth","getTemp","currentTemp","temp","Math","round","toString","isAddPlus","UnitForecast","useSelector","state","forecastData","daily","day","dt","eve","weather","result","icon","src","alt","description","id","Placeholder","Fragment","image","CardForcast","loading","app","loadingForecast","getLocation","SelectCityPast","SelectDate","useEffect","document","querySelector","setAttribute","placeholder","getTime","UnitPast","pastData","hourResult","hourly","current","CardPast","loadingPast","Layout","Footer","App","initialState","appReducer","action","forecastDataReducer","pastDataReducer","pastCardReducer","rootReducer","combineReducers","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.97b89fd8.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://api.openweathermap.org/data/2.5'\r\n})\r\n\r\nconst cancelToken = axios.CancelToken;\r\nexport const source = cancelToken.source();\r\n\r\nexport const isCancel = axios.isCancel;\r\n\r\n\r\n\r\n/* const instance = axios.create();\r\ninstance.CancelToken = axios.CancelToken;\r\ninstance.isCancel = axios.isCancel; */","export const SHOW_LOADER_FORECAST = 'APP/SHOW_LOADER_FORECAST';\r\nexport const SHOW_LOADER_PAST = 'APP/SHOW_LOADER_PAST';\r\nexport const HIDE_LOADER_FORECAST = 'APP/HIDE_LOADER_FORECAST';\r\nexport const HIDE_LOADER_PAST = 'APP/HIDE_LOADER_PAST';\r\n\r\nexport const FETCH_7DAYSFORECAST = 'FETCH_7DAYSFORECAST';\r\nexport const FETCH_PAST_FORECAST = 'FETCH_PAST_FORECAST';\r\n\r\nexport const GET_DATE = 'GET_DATE';\r\nexport const GET_LOCATION = 'GET_LOCATION';\r\n","import {\r\n  SHOW_LOADER_FORECAST, HIDE_LOADER_PAST,\r\n  HIDE_LOADER_FORECAST, SHOW_LOADER_PAST,\r\n} from './actionTypes'\r\n\r\nexport function showLoaderForcast() {\r\n  return {\r\n    type: SHOW_LOADER_FORECAST\r\n  }\r\n}\r\n\r\nexport function hideLoaderForcast() {\r\n  return {\r\n    type: HIDE_LOADER_FORECAST\r\n  }\r\n}\r\n\r\nexport function showLoaderPast() {\r\n  return {\r\n    type: SHOW_LOADER_PAST\r\n  }\r\n}\r\n\r\nexport function hideLoaderPast() {\r\n  return {\r\n    type: HIDE_LOADER_PAST\r\n  }\r\n}","import axios from '../../axios/axios';\r\nimport { source } from '../../axios/axios';\r\nimport { isCancel } from '../../axios/axios';\r\nimport {\r\n  FETCH_7DAYSFORECAST, FETCH_PAST_FORECAST\r\n} from './actionTypes';\r\nimport {\r\n  hideLoaderPast, showLoaderForcast,\r\n  showLoaderPast, hideLoaderForcast,\r\n} from './app';\r\n\r\n\r\nconst API_KEY = process.env.REACT_APP_API_REY;\r\n\r\nexport function fetch7DayForecast(lat, lon, part = '') {\r\n\r\n  return async dispatch => {\r\n    try {\r\n\r\n      dispatch(showLoaderForcast());\r\n\r\n      const url = `/onecall?lat=${lat}&lon=${lon}&exclude=${part}&units=metric&appid=${API_KEY}`;\r\n      const response = await axios.get(url, { cancelToken: source.token });\r\n\r\n      dispatch({\r\n        type: FETCH_7DAYSFORECAST,\r\n        data: response.data\r\n      });\r\n\r\n      dispatch(hideLoaderForcast());\r\n\r\n    } catch (thrown) {\r\n      if (isCancel(thrown)) {\r\n        console.log('Request canceled', thrown.message);\r\n        /* dispatch(showAlert('Что-то пошло не так...', 'danger')) */\r\n        dispatch(hideLoaderForcast());\r\n      } else {\r\n        /* dispatch(showAlert('Что-то пошло не так...', 'danger')) */\r\n        dispatch(hideLoaderForcast());\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function fetchPastForecast() {\r\n  \r\n  return async (dispatch, getState) => {\r\n\r\n    const { pastCardInfo } = getState();\r\n    \r\n    let unixDate = pastCardInfo.unixDate;\r\n    let cityLocation = pastCardInfo.cityLocation;\r\n\r\n    if (unixDate === null || cityLocation === null) return;\r\n    \r\n    const { lat, lon } = cityLocation;\r\n    \r\n    try {\r\n      dispatch(showLoaderPast());\r\n\r\n      const url = `/onecall/timemachine?lat=${lat}&lon=${lon}&dt=${unixDate}&units=metric&appid=${API_KEY}`;\r\n      const response = await axios.get(url, { cancelToken: source.token });\r\n\r\n      dispatch({\r\n        type: FETCH_PAST_FORECAST,\r\n        data: response.data\r\n      });\r\n\r\n      dispatch(hideLoaderPast());\r\n\r\n    } catch (thrown) {\r\n      if (isCancel(thrown)) {\r\n        console.log('Request canceled', thrown.message);\r\n        /* dispatch(showAlert('Что-то пошло не так...', 'danger')) */\r\n        dispatch(hideLoaderPast());\r\n      } else {\r\n        /* dispatch(showAlert('Что-то пошло не так...', 'danger')) */\r\n        dispatch(hideLoaderPast());\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport './select-city.scss';\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetch7DayForecast } from '../../store/actions/getWeather';\r\n\r\n\r\nconst CITIES = [\r\n  { name: 'Select city', disabled: true, hidden: true },\r\n  { name: 'Самара', lat: '53.195873' },\r\n  { name: 'Тольятти', lat: '53.507836' },\r\n  { name: 'Саратов', lat: '51.533557' },\r\n  { name: 'Казань', lat: '55.796127' },\r\n  { name: 'Краснодар', lat: '45.035470' },\r\n]\r\n\r\nconst SelectCity = ({ data }) => {\r\n\r\n/*   useEffect(() => {\r\n    const script = document.createElement(\"script\");\r\n    script.src = \"/lib/select.js\";\r\n    script.async = true;\r\n  \r\n    document.body.appendChild(script);\r\n  }, []); */\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = e => { \r\n    let lon;\r\n    let lat = e.target.value;\r\n    switch (lat) {\r\n     case '53.195873': // Самара\r\n      return dispatch(fetch7DayForecast(lat, lon = '50.100193'));\r\n     case '53.507836': // Тольятти\r\n      return dispatch(fetch7DayForecast(lat, lon = '49.420393'));\r\n     case '51.533557': // Саратов\r\n      return dispatch(fetch7DayForecast(lat, lon = '46.034257'));\r\n     case '55.796127': // Казань\r\n      return dispatch(fetch7DayForecast(lat, lon = '49.106405'));  \r\n     case '45.035470': // Краснодар\r\n      return dispatch(fetch7DayForecast(lat, lon = '38.975313'));\r\n     default: return;\r\n    }\r\n  }\r\n  \r\n  let isEmpty = Object.keys(data);\r\n  const cls = [\r\n    'select-future__city',\r\n    isEmpty.length ? 'select-future__city--active' : null,\r\n  ];\r\n\r\n  return (\r\n    <form className=\"card-forcast__select select-future\">\r\n      <select \r\n        onChange={ handleChange }\r\n        className={ cls.join(' ') }\r\n        defaultValue=\"Select city\"\r\n      >\r\n      {\r\n        CITIES.map(option => (\r\n          <option\r\n            key={ option.name }\r\n            value={ option.lat }\r\n            disabled={ option.disabled }\r\n            hidden={ option.hidden }\r\n          >\r\n            { option.name }\r\n          </option>\r\n        ))  \r\n      }\r\n      </select>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default SelectCity;","import React from 'react';\r\nimport './Loader.scss';\r\n\r\nconst Loader: React.FC = () => (\r\n  \r\n    <div className='loader-centre'>\r\n      <div className=\"lds-roller\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n)\r\n\r\nexport default Loader;","export function getDate(unixTimestamp) {\r\n\r\n  const date = new Date(unixTimestamp * 1000);\r\n\r\n  let dd = date.getDate();\r\n  const yyyy = date.getFullYear();\r\n\r\n  function toStrMonth() {\r\n    let mm = date.getMonth() + 1;\r\n    switch (mm) {\r\n      case 1: return 'jan';\r\n      case 2: return 'feb';\r\n      case 3: return 'mar';\r\n      case 4: return 'apr';\r\n      case 5: return 'may';\r\n      case 6: return 'jun';\r\n      case 7: return 'jul';\r\n      case 8: return 'aug';\r\n      case 9: return 'sep';\r\n      case 10: return 'oct';\r\n      case 11: return 'nov';\r\n      case 12: return 'dec';\r\n      default: return;\r\n   }\r\n  }\r\n\r\n  const mm = toStrMonth();\r\n  const currentDate = dd + ' ' + mm + ' ' + yyyy;\r\n\r\n  return currentDate\r\n}\r\n\r\nexport function getTemp(currentTemp) {\r\n\r\n  let temp = Math.round(currentTemp);\r\n\r\n  function isAddPlus() {\r\n    if ( currentTemp >= 0 ) {\r\n      return '+' + temp.toString()\r\n    }\r\n  }\r\n\r\n  temp = isAddPlus();\r\n\r\n  return temp\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { getDate, getTemp  } from '../../utils/utils';\r\nimport './unit-forecast.scss';\r\n\r\nconst UnitForecast = () => {\r\n\r\n  const data = useSelector(state => state.forecastData);\r\n\r\n  return data.daily.map(day => {\r\n\r\n    const date = getDate(day.dt);\r\n    const temp = getTemp(day.temp.eve);\r\n    return (\r\n        <div \r\n        key={ day.dt }\r\n        className=\"unit-forecast\"\r\n        >\r\n          <p className=\"unit-forecast__date\">\r\n            { date }\r\n          </p>\r\n        {\r\n          day.weather.map(result => {\r\n\r\n            let url = 'http://openweathermap.org/img/wn/' + result.icon + '@2x.png';\r\n            return (\r\n              <img\r\n                key={ result.id }\r\n                className=\"unit-forecast__image\"\r\n                src={ url }\r\n                alt={ result.description }\r\n              />\r\n            )\r\n          })\r\n        }\r\n          <div className=\"unit-forecast__tmp\">\r\n            <span className=\"unit-forecast__num\">\r\n              { temp }\r\n            </span>\r\n            <span>°</span>\r\n          </div>\r\n        </div>\r\n    )\r\n  })\r\n}\r\n\r\nexport default UnitForecast;","export default __webpack_public_path__ + \"static/media/placeholder.1a7907bc.svg\";","import React from 'react';\r\nimport image from '../../assets/images/placeholder.svg';\r\nimport './placeholder.scss';\r\n\r\nconst Placeholder: React.FC = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <img\r\n       className=\"card-forcast__placeholder\"\r\n       src={image}\r\n       alt=\"картинка вместо погоды\"\r\n      />\r\n      <p className=\"card-forcast__text\">\r\n        Fill in all the fields and\r\n        the weather will be displayed\r\n      </p>    \r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Placeholder;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './card-forcast.scss';\r\nimport SelectCity from '../select-city/SelectCity';\r\nimport Loader from '../loader/Loader';\r\nimport UnitForecast from '../unit-forecast/unit-forecast';\r\nimport Placeholder from '../placeholder/Placeholder';\r\n\r\n\r\nconst CardForcast = () => {\r\n\r\n  const loading = useSelector(state => state.app.loadingForecast);\r\n  const data = useSelector(state => state.forecastData);\r\n\r\n  return (\r\n    <article className=\"card-forcast card-forcast--future\">\r\n      <h3 className=\"card-forcast__title\">\r\n        7 Days Forecast\r\n      </h3>\r\n      <SelectCity data={ data } />\r\n      {\r\n        loading ? <Loader /> :\r\n        Object.keys(data).length ?\r\n            <div className=\"card-forcast__wrapper\">\r\n              <div className=\"card-forcast__overflow\">\r\n                <UnitForecast />\r\n              </div>\r\n            </div>\r\n            : <Placeholder />\r\n      }\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default CardForcast;","import { GET_LOCATION } from './actionTypes';\r\nimport { fetchPastForecast } from './getWeather';\r\n\r\nexport function getLocation(lat, lon) {\r\n\r\n  return dispatch => {\r\n    dispatch({\r\n      type: GET_LOCATION,\r\n      cityLocation: { lat, lon }\r\n    });\r\n    dispatch(fetchPastForecast());\r\n }\r\n}","import React from 'react';\r\nimport './select-city-past.scss';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getLocation } from '../../store/actions/getLocation';\r\n\r\n\r\nconst CITIES = [\r\n  { name: 'Select city', disabled: true, hidden: true },\r\n  { name: 'Самара', lat: '53.195873' },\r\n  { name: 'Тольятти', lat: '53.507836' },\r\n  { name: 'Саратов', lat: '51.533557' },\r\n  { name: 'Казань', lat: '55.796127' },\r\n  { name: 'Краснодар', lat: '45.035470' },\r\n]\r\n\r\nconst SelectCityPast = ({ data }) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = e => { \r\n    let lon;\r\n    let lat = e.target.value;\r\n    switch (lat) {\r\n     case '53.195873': // Самара\r\n        return dispatch(getLocation(lat, lon = '50.100193',));\r\n     case '53.507836': // Тольятти\r\n        return dispatch(getLocation(lat, lon = '49.420393'));\r\n     case '51.533557': // Саратов\r\n        return dispatch(getLocation(lat, lon = '46.034257'));\r\n     case '55.796127': // Казань\r\n        return dispatch(getLocation(lat, lon = '49.106405'));\r\n     case '45.035470': // Краснодар\r\n        return dispatch(getLocation(lat, lon = '38.975313'));\r\n     default: return;\r\n    }\r\n  }\r\n\r\n  const cls = [\r\n    'select-past__city',\r\n    data === null ? null : 'select-past__city--active',\r\n  ];\r\n\r\n  return (\r\n      <select\r\n        onChange={handleChange}\r\n        className={ cls.join(' ') }\r\n        defaultValue=\"Select city\"\r\n      >\r\n      {\r\n        CITIES.map(option => (\r\n          <option\r\n            key={option.name}\r\n            value={option.lat}\r\n            disabled={option.disabled}\r\n            hidden={option.hidden}\r\n          >\r\n            {option.name}\r\n          </option>\r\n        ))  \r\n      }\r\n      </select>\r\n  )\r\n}\r\n\r\nexport default SelectCityPast;","import React, { useEffect } from 'react';\r\nimport './select-date.scss';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getDate } from '../../store/actions/getDate';\r\nimport { fetchPastForecast } from '../../store/actions/getWeather';\r\n\r\n\r\nconst SelectDate = ({ data }) => {\r\n\r\n  useEffect(() => {\r\n    let dateControl = document.querySelector('.select-past__date');\r\n    dateControl.setAttribute(\"onfocus\", \"(this.type='date')\");\r\n    /* onblur=\"(this.type='text')\" */\r\n  }, []);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = e => { \r\n    const date = e.target.value;\r\n    const unixDate = new Date(`${date}`).getTime() / 1000;\r\n    dispatch(getDate(unixDate));\r\n    dispatch(fetchPastForecast());\r\n  }\r\n\r\n  const cls = [\r\n    'select-past__date',\r\n    data === null ? null : 'select-past__date--active',\r\n  ];\r\n\r\n  return (\r\n    <input\r\n      className={ cls.join(' ') }\r\n      type=\"text\"\r\n      placeholder=\"Select date\"\r\n      onChange={ handleChange }\r\n    />\r\n  )\r\n}\r\n\r\nexport default SelectDate;","import { GET_DATE } from './actionTypes';\r\n\r\nexport function getDate(unixDate) {\r\n  return {\r\n    type: GET_DATE,\r\n    unixDate\r\n }\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './unit-past.scss';\r\nimport { getDate, getTemp  } from '../../utils/utils';\r\n\r\n\r\nconst UnitPast = () => {\r\n  \r\n  const data = useSelector(state => state.pastData);\r\n\r\n  const hourResult = data.hourly[11]; // 11:00\r\n\r\n  const date = getDate(data.current.dt);\r\n  const temp = getTemp(hourResult.temp);\r\n\r\n\r\n  return (\r\n    <div className=\"card-forcast__unit unit-past\">\r\n      <p className=\"unit-past__date\">\r\n        { date }\r\n      </p>\r\n      {\r\n        hourResult.weather.map(result => {\r\n\r\n          let url = 'http://openweathermap.org/img/wn/' + result.icon + '@2x.png';\r\n          return (\r\n            <img\r\n              key={ result.id }\r\n              className=\"unit-past__image\"\r\n              src={ url }\r\n              alt={ result.description }\r\n            />\r\n          )\r\n        })\r\n      }\r\n      <div className=\"unit-past__tmp\">\r\n        <span className=\"unit-past__num\">\r\n          { temp }\r\n        </span>\r\n        <span>°</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UnitPast;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Loader from '../loader/Loader';\r\nimport SelectCityPast from '../select-city-past/selectCityPast';\r\nimport SelectDate from '../select-date/SelectDate';\r\nimport UnitPast from '../unit-past/UnitPast';\r\nimport Placeholder from '../placeholder/Placeholder'\r\n\r\nconst CardPast = () => {\r\n\r\n  const loading = useSelector(state => state.app.loadingPast);\r\n  const data = useSelector(state => state.pastData);\r\n  const { cityLocation } = useSelector(state => state.pastCardInfo);\r\n  const { unixDate } = useSelector(state => state.pastCardInfo);\r\n\r\n  return (\r\n    <article className=\"card-forcast card-forcast--past\">\r\n      <h3 className=\"card-forcast__title card-forcast__title--left\">\r\n        Forecast for a Date in the Past\r\n      </h3>\r\n      <form className=\"card-forcast__select select-past\">\r\n        <SelectCityPast data={ cityLocation } />\r\n        <SelectDate data={ unixDate } />\r\n      </form>\r\n      {\r\n        loading ? <Loader /> :\r\n        Object.keys(data).length ?\r\n        <UnitPast /> : <Placeholder />\r\n      }\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default CardPast;","import React from 'react';\r\nimport './header.scss';\r\n\r\nconst Layout: React.FC = () => {\r\n  return (\r\n    <header className=\"main-title\">\r\n     <h2>\r\n       Weather\r\n     </h2>\r\n     <h2>\r\n      forecast \r\n     </h2>\r\n   </header>\r\n  )\r\n}\r\n\r\nexport default Layout;","import React from 'react';\r\nimport './footer.scss';\r\n\r\nconst Footer: React.FC = () => (\r\n  <footer className=\"footer\">\r\n   <p>C ЛЮБОВЬЮ ОТ MERCURY DEVELOPMENT</p>\r\n  </footer> \r\n)\r\n\r\nexport default Footer;\r\n\r\n","import React from 'react';\r\nimport CardForcast from './components/card-forcast/CardForcast';\r\nimport CardPast from './components/card-past/CardPast';\r\nimport Title from './components/header/Header';\r\nimport './app.scss';\r\nimport Footer from './components/footer/Footer';\r\n\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <Title />\r\n      <main className=\"container\">\r\n       <CardForcast />\r\n       <CardPast />\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {\r\n  SHOW_LOADER_FORECAST, HIDE_LOADER_PAST,\r\n  HIDE_LOADER_FORECAST, SHOW_LOADER_PAST,\r\n} from '../actions/actionTypes';\r\n\r\nlet initialState = {\r\n  loadingForecast: false,\r\n  loadingPast: false,\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SHOW_LOADER_FORECAST:\r\n      return { ...state, loadingForecast: true }\r\n    case HIDE_LOADER_FORECAST:\r\n      return { ...state, loadingForecast: false }\r\n    case SHOW_LOADER_PAST:\r\n      return { ...state, loadingPast: true }\r\n    case HIDE_LOADER_PAST:\r\n      return { ...state, loadingPast: false }\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport default appReducer;","import { FETCH_7DAYSFORECAST } from '../actions/actionTypes';\r\n\r\nlet initialState = {};\r\n\r\nconst forecastDataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_7DAYSFORECAST:\r\n      return action.data;\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default forecastDataReducer;","import { FETCH_PAST_FORECAST } from '../actions/actionTypes';\r\n\r\nlet initialState = {};\r\n\r\nconst pastDataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_PAST_FORECAST:\r\n      return action.data;\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default pastDataReducer;","import { GET_DATE, GET_LOCATION } from '../actions/actionTypes';\r\n\r\nlet initialState = {\r\n  unixDate: null,\r\n  cityLocation: null,\r\n}\r\n\r\nconst pastCardReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_DATE:\r\n      return { ...state, unixDate: action.unixDate }\r\n    case GET_LOCATION:\r\n      return { ...state, cityLocation: action.cityLocation }\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default pastCardReducer;","import { combineReducers } from 'redux';\r\nimport appReducer from './app';\r\nimport forecastDataReducer from './forecastData';\r\nimport pastDataReducer from './pastData';\r\nimport pastCardReducer from './pastCard';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  app: appReducer,\r\n  forecastData: forecastDataReducer,\r\n  pastData: pastDataReducer,\r\n  pastCardInfo: pastCardReducer \r\n})\r\n\r\nexport default rootReducer;","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './store/reducers/rootReducer';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n)  \r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <App /> \r\n  </Provider>\r\n)\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}