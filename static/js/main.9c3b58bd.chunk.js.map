{"version":3,"sources":["types/app.ts","types/pastCard.ts","cities/cities.ts","store/actions/app.ts","store/actions/getDate.ts","types/forecastData.ts","types/pastData.ts","axios/axios.ts","store/actions/getWeather.ts","store/actions/getLocation.ts","store/actions/index.ts","hooks/useActions.ts","utils/positionError.ts","components/select-city/SelectCity.tsx","components/loader/Loader.tsx","utils/getDate.ts","assets/images/offline-icon.svg","components/unit-forecast/UnitForecast.tsx","assets/images/placeholder.svg","components/placeholder/Placeholder.tsx","hooks/useTypedSelector.ts","components/card-forcast/CardForcast.tsx","components/select-city-past/selectCityPast.tsx","utils/to5DaysAgo.ts","utils/to1DayAgo.ts","components/select-date/SelectDate.tsx","components/unit-past/UnitPast.tsx","components/card-past/CardPast.tsx","components/header/Header.tsx","components/footer/Footer.tsx","App.tsx","store/reducers/app.ts","store/reducers/forecastData.ts","store/reducers/pastData.ts","store/reducers/pastCard.ts","store/reducers/rootReducer.ts","reportWebVitals.ts","serviceWorkerRegistration.ts","index.tsx"],"names":["LoaderStatus","PastCard","CITIES","name","disabled","hidden","lat","showLoaderForcast","type","SHOW_LOADER_FORECAST","hideLoaderForcast","HIDE_LOADER_FORECAST","showLoaderPast","SHOW_LOADER_PAST","hideLoaderPast","HIDE_LOADER_PAST","getDate","unixDate","GET_DATE","Days7Forecast","PastData","axios","create","baseURL","source","CancelToken","isCancel","validateThrown","something","error","codeIsCorrect","code","messageIsCorrect","message","isServerError","console","log","API_KEY","process","fetch7DayForecast","lon","part","dispatch","a","url","get","cancelToken","token","response","FETCH_7DAYSFORECAST","data","fetchPastForecast","getState","pastCardInfo","cityLocation","FETCH_PAST_FORECAST","getLocation","GET_LOCATION","app","getWeater","useActions","useDispatch","bindActionCreators","UserActions","positionError","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","SelectCity","forecast7DaysData","useEffect","setGeoHandler","getIncomeLocation","navigator","registerProtocolHandler","window","addEventListener","geoData","URL","location","toString","searchParams","incomeLocation","split","latitude","parseFloat","longitude","geoOptions","enableHighAccuracy","timeout","maximumAge","setCurrentPosition","position","coords","cls","Object","keys","length","className","onChange","e","target","value","geolocation","getCurrentPosition","join","defaultValue","map","option","Loader","unixTimestamp","date","Date","dd","yyyy","getFullYear","getMonth","toStrMonth","_path","UnitForecast","props","forecastDataToShow","forecastData","useSelector","state","screen","width","currentShowCards","daily","card","day","dt","temp","Math","round","eve","weather","result","icon","src","alt","description","id","Placeholder","Fragment","image","useTypedSelector","CardForcast","loading7DaysForecast","cardsToShow","useRef","useState","setCurrentShowCards","isInctiveNext","current","includes","isAIntivePrev","clsPrev","clsNext","trim","onClick","prevCards","prev","nextCards","SelectCityPast","today","getTime","fiveDaysAgo","toJSON","slice","oneDayAgo","SelectDate","inputRef","wrapperRef","input","wrapper","addClass","classList","add","removeClass","remove","removeEventListener","ref","now","min","max","UnitPast","pastDataForecast","pastData","hourResult","hourly","CardPast","loadingPastForecast","_extends","assign","i","arguments","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgOfflineIcon","_ref","svgRef","title","titleId","xmlns","xmlnsXlink","x","y","viewBox","style","enableBackground","xmlSpace","d","ForwardRef","Header","checkNetworkStatus","isOnline","setIsOnline","onLine","Footer","App","initialState","appReducer","action","forecastDataReducer","pastDataReducer","pastCardReducer","rootReducer","combineReducers","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById","href","origin","fetch","headers","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.9c3b58bd.chunk.js","sourcesContent":["\r\nexport interface IStateLoading {\r\n  loading7DaysForecast: boolean\r\n  loadingPastForecast: boolean\r\n};\r\n\r\ntype ShowLoaderForcast = {\r\n  type: LoaderStatus.SHOW_LOADER_FORECAST;\r\n};\r\n\r\ntype HideLoaderForcast = {\r\n  type: LoaderStatus.HIDE_LOADER_FORECAST;\r\n};\r\n\r\ntype ShowLoaderPast = {\r\n  type: LoaderStatus.SHOW_LOADER_PAST;\r\n};\r\n\r\ntype HideLoaderPast = {\r\n  type: LoaderStatus.HIDE_LOADER_PAST;\r\n};\r\n\r\nexport type AppAction = ShowLoaderForcast | HideLoaderForcast |\r\n                  ShowLoaderPast | HideLoaderPast\r\n\r\nexport enum LoaderStatus {\r\n  SHOW_LOADER_FORECAST = 'SHOW_LOADER_FORECAST',\r\n  HIDE_LOADER_FORECAST = 'HIDE_LOADER_FORECAST',\r\n  SHOW_LOADER_PAST = 'SHOW_LOADER_PAST',\r\n  HIDE_LOADER_PAST = 'HIDE_LOADER_PAST'\r\n};\r\n\r\n\r\n","export interface IPastCardState {\r\n  unixDate: null | number,\r\n  cityLocation: null | string,\r\n};\r\n\r\nexport enum PastCard {\r\n  GET_DATE = 'GET_DATE',\r\n  GET_LOCATION = 'GET_LOCATION'\r\n};\r\n\r\nexport type PastCardAction = {\r\n  type: string,\r\n  unixDate: number,\r\n  cityLocation:string\r\n};","interface ICities {\r\n  name: 'Select city' | 'Samara' | 'Tolyatti'\r\n        | 'Saratov' | 'Kazan'\r\n        | 'Krasnodar' | 'Сurrent location'\r\n  lat?: '53.195873' | '53.507836' | '51.533557'\r\n      | '55.796127' | '45.035470' | 'current'\r\n  disabled?: boolean,\r\n  hidden?:boolean\r\n};\r\n\r\nexport const CITIES: ICities[] = [\r\n  { name: 'Select city', disabled: true, hidden: true },\r\n  { name: 'Samara', lat: '53.195873' },\r\n  { name: 'Tolyatti', lat: '53.507836' },\r\n  { name: 'Saratov', lat: '51.533557' },\r\n  { name: 'Kazan', lat: '55.796127' },\r\n  { name: 'Krasnodar', lat: '45.035470' },\r\n  { name: 'Сurrent location', lat: 'current' },\r\n];","import { LoaderStatus } from '../../types/app';\r\n\r\n\r\nexport function showLoaderForcast() {\r\n  return {\r\n    type: LoaderStatus.SHOW_LOADER_FORECAST\r\n  }\r\n}\r\n\r\nexport function hideLoaderForcast() {\r\n  return {\r\n    type: LoaderStatus.HIDE_LOADER_FORECAST\r\n  }\r\n}\r\n\r\nexport function showLoaderPast() {\r\n  return {\r\n    type: LoaderStatus.SHOW_LOADER_PAST\r\n  }\r\n}\r\n\r\nexport function hideLoaderPast() {\r\n  return {\r\n    type: LoaderStatus.HIDE_LOADER_PAST\r\n  }\r\n}","import { PastCard } from '../../types/pastCard';\r\n\r\n\r\nexport function getDate(unixDate: number) {\r\n  return {\r\n    type: PastCard.GET_DATE,\r\n    unixDate\r\n }\r\n}","interface IWeatherData {\r\n  icon: string\r\n  id: number\r\n  description: string\r\n};\r\n\r\nexport interface IForecastData {\r\n  dt: number\r\n  temp: { eve: number }\r\n  weather: IWeatherData[]\r\n};\r\n\r\nexport enum Days7Forecast {\r\n  FETCH_7DAYSFORECAST = 'FETCH_7DAYSFORECAST'\r\n};\r\n\r\nexport type Days7ForecastAction = {\r\n  type: Days7Forecast.FETCH_7DAYSFORECAST,\r\n  data: IForecastData\r\n}\r\n\r\n\r\n\r\n\r\n","interface IWeather {\r\n  icon: string,\r\n  id: number,\r\n  description: string,\r\n};\r\n\r\ninterface IHourly {\r\n  temp: number\r\n  weather: IWeather[]\r\n};\r\n\r\n\r\nexport interface IPastData {\r\n  current: { dt: number }\r\n  hourly: IHourly[]\r\n};\r\n\r\nexport type PastDataAction = {\r\n  type: PastData.FETCH_PAST_FORECAST;\r\n  data: IPastData;\r\n};\r\n\r\nexport enum PastData {\r\n  FETCH_PAST_FORECAST = 'FETCH_PAST_FORECAST'\r\n};\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://api.openweathermap.org/data/2.5'\r\n})\r\n\r\nconst cancelToken = axios.CancelToken;\r\nexport const source = cancelToken.source();\r\n\r\nexport const isCancel = axios.isCancel;\r\n\r\n\r\n\r\n/* const instance = axios.create();\r\ninstance.CancelToken = axios.CancelToken;\r\ninstance.isCancel = axios.isCancel; */","import axios from '../../axios/axios';\r\nimport { source } from '../../axios/axios';\r\nimport { isCancel } from '../../axios/axios';\r\nimport { Days7Forecast, IForecastData } from '../../types/forecastData';\r\nimport { IPastData, PastData } from '../../types/pastData';\r\nimport {\r\n  hideLoaderPast, showLoaderForcast,\r\n  showLoaderPast, hideLoaderForcast,\r\n} from './app';\r\n\r\n\r\ntype ServerError = {\r\n  code: number;\r\n  message: string;\r\n};\r\n\r\ntype SityLocation = {\r\n  lat: string,\r\n  lon: string\r\n};\r\n  \r\nconst isServerError = (error: any): error is ServerError => {\r\n  if (!error) return false; // null, undefined, ''\r\n  \r\n  const codeIsCorrect = typeof error.code === 'number';\r\n  const messageIsCorrect = typeof error.message === 'string';\r\n  \r\n  return codeIsCorrect && messageIsCorrect;\r\n};\r\n\r\nconst validateThrown = (something: string | ServerError): void => {\r\n  if (isServerError(something)) {\r\n    console.error(`Error code: ${something.code}, message: ${something.message}`);\r\n  } else {\r\n    console.log('something is not an server error');\r\n  }\r\n};\r\n\r\nconst API_KEY = process.env.REACT_APP_API_REY;\r\n\r\nexport function fetch7DayForecast(lat: string, lon: string, part:string = '') {\r\n\r\n  return async dispatch => {\r\n    try {\r\n\r\n      dispatch(showLoaderForcast());\r\n\r\n      const url: string =\r\n        `/onecall?lat=${lat}&lon=${lon}&exclude=${part}&units=metric&appid=${API_KEY}`;\r\n      const response =\r\n        await axios.get<IForecastData[]>(url, { cancelToken: source.token });\r\n\r\n      dispatch({\r\n        type: Days7Forecast.FETCH_7DAYSFORECAST,\r\n        data: response.data\r\n      });\r\n\r\n      dispatch(hideLoaderForcast());\r\n\r\n    } catch (thrown: any) {\r\n      validateThrown(thrown);\r\n      if (isCancel(thrown)) {\r\n        console.log('Request canceled', thrown.message);\r\n        /* dispatch(showAlert('Что-то пошло не так...', 'danger')) */\r\n        dispatch(hideLoaderForcast());\r\n      } else {\r\n        /* dispatch(showAlert('Что-то пошло не так...', 'danger')) */\r\n        dispatch(hideLoaderForcast());\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport function fetchPastForecast() {\r\n  /* return async (dispatch: Dispatch<IPastDataAction>, getState) => { */\r\n  return async (dispatch, getState) => {\r\n\r\n    const { pastCardInfo } = getState();\r\n    \r\n    let unixDate:number | null = pastCardInfo.unixDate;\r\n    let cityLocation:SityLocation | null = pastCardInfo.cityLocation;\r\n\r\n    if (unixDate === null || cityLocation === null) return;\r\n    \r\n    const { lat, lon } = cityLocation;\r\n    \r\n    try {\r\n      dispatch(showLoaderPast());\r\n\r\n      const url: string =\r\n        `/onecall/timemachine?lat=${lat}&lon=${lon}&dt=${unixDate}&units=metric&appid=${API_KEY}`;\r\n      const response = await axios.get<IPastData>(url, { cancelToken: source.token });\r\n\r\n      dispatch({\r\n        type: PastData.FETCH_PAST_FORECAST,\r\n        data: response.data\r\n      });\r\n\r\n      dispatch(hideLoaderPast());\r\n\r\n    } catch (thrown: any) {\r\n      validateThrown(thrown);\r\n      if (isCancel(thrown)) {\r\n        console.log('Request canceled', thrown.message);\r\n        /* dispatch(showAlert('Что-то пошло не так...', 'danger')) */\r\n        dispatch(hideLoaderPast());\r\n      } else {\r\n        /* dispatch(showAlert('Что-то пошло не так...', 'danger')) */\r\n        dispatch(hideLoaderPast());\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n\r\n","import { PastCard } from '../../types/pastCard';\r\nimport { fetchPastForecast } from './getWeather';\r\n\r\n\r\nexport function getLocation(lat: string, lon: string) {\r\n\r\n  return dispatch => {\r\n    dispatch({\r\n      type: PastCard.GET_LOCATION,\r\n      cityLocation: { lat, lon }\r\n    });\r\n    dispatch(fetchPastForecast());\r\n }\r\n}","import * as app from './app';\r\nimport * as getDate from './getDate';\r\nimport * as getLocation from './getLocation';\r\nimport * as getWeater from './getWeather';\r\n\r\n\r\nexport default {\r\n  ...app,\r\n  ...getDate,\r\n  ...getLocation,\r\n  ...getWeater\r\n}","import { useDispatch } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport UserActions from '../store/actions';\r\n\r\n\r\nexport const useActions = () => {\r\n  const dispatch = useDispatch()\r\n  return bindActionCreators(UserActions, dispatch)\r\n}","export default function positionError(error:GeolocationPositionError) { \r\nswitch ( error.code ) { \r\n case error.PERMISSION_DENIED: \r\n  console.error( \"User denied the request for Geolocation.\" ); \r\n   break;\r\n case error.POSITION_UNAVAILABLE: \r\n  console.error( \"Location information is unavailable.\" ); \r\n   break; \r\n case error.TIMEOUT: \r\n  console.error(\"The request to get user location timed out.\");    \r\n    break;\r\n default:\r\n  console.error(`Code: ${error.code}: ${error.message}`);\r\n    break;\r\n  }\r\n}","import './select-city.scss';\r\nimport { CITIES } from '../../cities/cities';\r\nimport { useActions } from '../../hooks/useActions';\r\nimport positionError from '../../utils/positionError';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nconst SelectCity = ({ forecast7DaysData }) => {\r\n\r\n  useEffect(() => {\r\n    setGeoHandler();\r\n    getIncomeLocation();\r\n  }, []);\r\n  \r\n\r\n  const { fetch7DayForecast } = useActions();\r\n\r\n  const setGeoHandler = (): void => {\r\n    if ('registerProtocolHandler' in navigator) {\r\n      navigator.registerProtocolHandler(\r\n        'geo', '/weather-forecast/?geo=%s', 'Geo-handler'\r\n      );\r\n    }\r\n  }\r\n\r\n  const getIncomeLocation = (): void => {\r\n    window.addEventListener('load', () => {\r\n      const url = new URL(window.location.toString());\r\n      const { searchParams } = url;\r\n      const geoData = searchParams.get('geo')?.toString();\r\n      try {\r\n        if (geoData) {\r\n          const incomeLocation = geoData.split(':')[1]?.split(',');\r\n          const latitude = parseFloat(incomeLocation[0]).toString();\r\n          const longitude = parseFloat(incomeLocation[1]).toString();\r\n          fetch7DayForecast(latitude, longitude);\r\n        }\r\n      } catch(error) {\r\n        console.error(error.message);\r\n      }\r\n    });\r\n  }\r\n\r\n  const geoOptions:PositionOptions = {\r\n    enableHighAccuracy: true, \r\n    timeout: 1500,\r\n    maximumAge: 0,\r\n  }\r\n\r\n  const setCurrentPosition = (position: GeolocationPosition): void => {\r\n    const latitude = position.coords.latitude.toString(); \r\n    const longitude = position.coords.longitude.toString();\r\n    fetch7DayForecast(latitude, longitude);\r\n  }\r\n\r\n  const setCityLocation = e => {\r\n    if (e.target.value === 'current') {\r\n      const handleCurrentLocation = () => {\r\n        if (navigator.geolocation) { \r\n          navigator.geolocation.getCurrentPosition(\r\n            setCurrentPosition, positionError, geoOptions\r\n          );\r\n        } \r\n      }\r\n      handleCurrentLocation();\r\n    }\r\n    /* eslint-disable */\r\n    let longitude = '';\r\n    let latitude = e.target.value;\r\n    switch (latitude) {\r\n     case '53.195873': // Самара\r\n      return fetch7DayForecast(latitude, longitude = '50.100193');\r\n     case '53.507836': // Тольятти\r\n      return fetch7DayForecast(latitude, longitude = '49.420393');\r\n     case '51.533557': // Саратов\r\n      return fetch7DayForecast(latitude, longitude = '46.034257');\r\n     case '55.796127': // Казань\r\n      return fetch7DayForecast(latitude, longitude = '49.106405');  \r\n     case '45.035470': // Краснодар\r\n      return fetch7DayForecast(latitude, longitude = '38.975313');\r\n     default: return;\r\n    }\r\n  }\r\n  \r\n  let isEmptyForecast = Object.keys(forecast7DaysData);\r\n  const cls = [\r\n    'select-future__city',\r\n    isEmptyForecast.length ? 'select-future__city--active' : null,\r\n  ];\r\n\r\n  return (\r\n    <form className=\"card-forcast__select select-future\">\r\n      <select \r\n        onChange={ setCityLocation }\r\n        className={ cls.join(' ') }\r\n        defaultValue=\"Select city\"\r\n      >\r\n      {\r\n        CITIES.map(option => (\r\n          <option\r\n            key={ option.name }\r\n            value={ option.lat }\r\n            disabled={ option.disabled }\r\n            hidden={ option.hidden }\r\n          >\r\n            { option.name }\r\n          </option>\r\n        ))  \r\n      }\r\n      </select>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default SelectCity;","import React from 'react';\r\nimport './Loader.scss';\r\n\r\nconst Loader: React.FC = () => (\r\n  \r\n    <div className='loader-centre'>\r\n      <div className=\"lds-roller\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n)\r\n\r\nexport default Loader;","\r\nexport function getDate(unixTimestamp:number):string {\r\n\r\n  const date = new Date(unixTimestamp * 1000);\r\n\r\n  let dd: number | string = date.getDate();\r\n  \r\n  if (dd < 10) { dd = '0' + dd };\r\n\r\n  const yyyy: number = date.getFullYear();\r\n  \r\n  type Date = 'jan' | 'feb' | 'mar' |\r\n              'apr' | 'may' | 'jun' |\r\n              'jul' | 'aug' | 'sep' |\r\n              'oct' | 'nov' | 'dec' | undefined;\r\n\r\n  function toStrMonth():Date {\r\n    const mm:number = date.getMonth() + 1;\r\n    switch (mm) {\r\n      case 1: return 'jan';\r\n      case 2: return 'feb';\r\n      case 3: return 'mar';\r\n      case 4: return 'apr';\r\n      case 5: return 'may';\r\n      case 6: return 'jun';\r\n      case 7: return 'jul';\r\n      case 8: return 'aug';\r\n      case 9: return 'sep';\r\n      case 10: return 'oct';\r\n      case 11: return 'nov';\r\n      case 12: return 'dec';\r\n      default: return;\r\n   }\r\n  }\r\n\r\n  const mm:Date = toStrMonth();\r\n  const currentDate:string = dd + ' ' + mm + ' ' + yyyy;\r\n\r\n  return currentDate\r\n}","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgOfflineIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 512 512\",\n    style: {\n      enableBackground: \"new 0 0 512 512\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M378.6,206.6C367.2,149.2,316.7,106,256,106c-24.6,0-47.5,7.2-66.8,19.5l24.3,24.3c12.8-6.6,27.2-10.5,42.5-10.5 c50.7,0,91.7,41,91.7,91.7v8.3h25c27.6,0,50,22.4,50,50c0,18.9-10.6,35.2-26.1,43.7l24.2,24.2c21.2-15.1,35.2-39.8,35.2-67.8 C456,245.3,421.8,209.7,378.6,206.6z M106,127.3l45.8,45.7c-53.2,2.2-95.8,46-95.8,99.7c0,55.3,44.7,100,100,100h195.4l33.3,33.3 l21.2-21.2L127.3,106L106,127.3z M184.8,206l133.3,133.3H156c-36.8,0-66.7-29.8-66.7-66.7S119.2,206,156,206H184.8z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgOfflineIcon);\nexport default __webpack_public_path__ + \"static/media/offline-icon.3db9e074.svg\";\nexport { ForwardRef as ReactComponent };","import { FC } from 'react';\r\nimport { getDate } from '../../utils/getDate';\r\nimport './unit-forecast.scss';\r\nimport { IForecastData } from '../../types/forecastData';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\ninterface IunitProps {\r\n  currentShowCards: IForecastData[]\r\n};\r\n\r\ninterface IRootState {\r\n  forecastData: {\r\n    daily: IForecastData[]\r\n  }\r\n};\r\n\r\nconst UnitForecast: FC<IunitProps> = props => {\r\n  \r\n  let forecastData = useSelector((state: IRootState) => state.forecastData);\r\n  let forecastDataToShow;\r\n\r\n  if (window.screen.width > 768 && !!props.currentShowCards.length) {\r\n      \r\n    forecastDataToShow = props.currentShowCards;\r\n  } else if (window.screen.width < 768) {\r\n    \r\n    forecastDataToShow = forecastData.daily;  \r\n  } else {\r\n    \r\n      const cards:number[] = [0, 1, 2];\r\n      forecastDataToShow = cards.map(card => {\r\n        return forecastData.daily[card]\r\n      }); \r\n    };\r\n  \r\n    return forecastDataToShow.map(day => {\r\n \r\n    const date:string = getDate(day.dt);\r\n    const temp:number = Math.round(day.temp.eve);\r\n    return (\r\n        <div \r\n        key={ day.dt }\r\n        className=\"unit-forecast\"\r\n        >\r\n          <p className=\"unit-forecast__date\">\r\n            { date }\r\n          </p>\r\n        {\r\n          day.weather.map(result => {\r\n\r\n            let url = 'http://openweathermap.org/img/wn/' + result.icon + '@2x.png';\r\n            return (\r\n              <img\r\n                key={ result.id }\r\n                className=\"unit-forecast__image\"\r\n                src={ url }\r\n                alt={ result.description }\r\n              />\r\n            )\r\n          })\r\n        }\r\n          <div className=\"unit-forecast__tmp\">\r\n            <span className=\"unit-forecast__num\">\r\n              { temp >= 0 ? `+${temp}` : temp }\r\n            </span>\r\n            <span>°</span>\r\n          </div>\r\n        </div>\r\n    )\r\n  })\r\n}\r\n\r\nexport default UnitForecast;","export default __webpack_public_path__ + \"static/media/placeholder.1a7907bc.svg\";","import React from 'react';\r\nimport image from '../../assets/images/placeholder.svg';\r\nimport './placeholder.scss';\r\n\r\nconst Placeholder: React.FC = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <img\r\n       className=\"card-forcast__placeholder\"\r\n       src={ image }\r\n       alt=\"картинка вместо погоды\"\r\n      />\r\n      <p className=\"card-forcast__text\">\r\n        Fill in all the fields and\r\n        the weather will be displayed\r\n      </p>    \r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Placeholder;","import { TypedUseSelectorHook, useSelector } from 'react-redux';\r\nimport { RootState } from '../store/reducers/rootReducer';\r\n\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;","import React, { useRef, useState } from 'react';\r\nimport './card-forcast.scss';\r\nimport SelectCity from '../select-city/SelectCity';\r\nimport Loader from '../loader/Loader';\r\nimport UnitForecast from '../unit-forecast/UnitForecast';\r\nimport Placeholder from '../placeholder/Placeholder';\r\nimport { IForecastData } from '../../types/forecastData';\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nconst CardForcast: React.FC = () => {\r\n\r\n  const { loading7DaysForecast } = useTypedSelector((state) => state.app);\r\n  const forecast7DaysData = useSelector((state: any) => state.forecastData);\r\n\r\n  const cardsToShow = useRef<number[]>([0, 1, 2]);\r\n  const [currentShowCards, setCurrentShowCards] = useState<IForecastData[]>([]);\r\n\r\n  const isInctiveNext:boolean = cardsToShow.current.includes(7);\r\n  const isAIntivePrev:boolean = cardsToShow.current.includes(0);\r\n\r\n  const setNextCards = () => {\r\n    if (isInctiveNext) return;\r\n    \r\n    const nextCards = cardsToShow.current.map(card => {\r\n      return card + 1\r\n    });\r\n    cardsToShow.current = nextCards;\r\n    \r\n    const currentShowCards: any = nextCards.map(card => {\r\n      return forecast7DaysData.daily[card]\r\n    });\r\n\r\n    setCurrentShowCards(prev => currentShowCards);\r\n  };\r\n\r\n  const setPrevCards = () => {\r\n    if (isAIntivePrev) return;\r\n    \r\n    const prevCards = cardsToShow.current.map(card => {\r\n      return card - 1\r\n    });\r\n    cardsToShow.current = prevCards;\r\n\r\n    const currentShowCards: any = prevCards.map(card => {\r\n      return forecast7DaysData.daily[card]\r\n    });\r\n\r\n    setCurrentShowCards(prev => currentShowCards);\r\n  };\r\n\r\n  const clsPrev = [\r\n    'arrow arrow-prev',\r\n    isAIntivePrev ? 'arrow--disabled' : '',\r\n  ];\r\n\r\n  const clsNext = [\r\n    'arrow arrow-next',\r\n    isInctiveNext ? 'arrow--disabled' : '',\r\n  ];\r\n  \r\n  return (\r\n    \r\n    <article className=\"card-forcast card-forcast--future\">\r\n      <h3 className=\"card-forcast__title\">\r\n        7 Days Forecast\r\n      </h3>\r\n      <SelectCity forecast7DaysData={ forecast7DaysData } />\r\n      {\r\n        loading7DaysForecast ? <Loader /> :\r\n        forecast7DaysData.daily ?\r\n            <div className=\"card-forcast__wrapper\">\r\n              <div className=\"card-forcast__overflow\">\r\n              <UnitForecast currentShowCards={ currentShowCards } />\r\n                <button\r\n                  className={ clsPrev.join(' ').trim() }\r\n                  onClick={ setPrevCards }\r\n                />\r\n                <button\r\n                  className={ clsNext.join(' ').trim() }\r\n                  onClick={ setNextCards }\r\n                />\r\n              </div>\r\n            </div>\r\n            : <Placeholder />\r\n      }\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default CardForcast;","import './select-city-past.scss';\r\nimport { CITIES } from '../../cities/cities';\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\nimport { useActions } from '../../hooks/useActions';\r\nimport positionError from '../../utils/positionError';\r\n\r\n\r\nconst SelectCityPast: React.FC = () => {\r\n\r\n  const { getLocation } = useActions();\r\n  const cityLocation = useTypedSelector((state) => state.pastCardInfo.cityLocation);\r\n\r\n  const geoOptions:PositionOptions = {\r\n    enableHighAccuracy: true, \r\n    timeout: 1500,\r\n    maximumAge: 0,\r\n  }\r\n\r\n  const setCurrentPosition = (position: GeolocationPosition): void => {\r\n    const latitude = position.coords.latitude.toString(); \r\n    const longitude = position.coords.longitude.toString();\r\n    getLocation(latitude, longitude);\r\n  }\r\n\r\n  const setCityLocation = e => {\r\n    if (e.target.value === 'current') {\r\n      const handleCurrentLocation = () => {\r\n        if (navigator.geolocation) { \r\n          navigator.geolocation.getCurrentPosition(\r\n            setCurrentPosition, positionError, geoOptions\r\n          );\r\n        } \r\n      }\r\n      handleCurrentLocation();\r\n    }\r\n    /* eslint-disable */\r\n    let longitude = '';\r\n    let latitude = e.target.value;\r\n    switch (latitude) {\r\n     case '53.195873': // Самара\r\n        return getLocation(latitude, longitude = '50.100193');\r\n     case '53.507836': // Тольятти\r\n        return getLocation(latitude, longitude = '49.420393');\r\n     case '51.533557': // Саратов\r\n        return getLocation(latitude, longitude = '46.034257');\r\n     case '55.796127': // Казань\r\n        return getLocation(latitude, longitude = '49.106405');\r\n     case '45.035470': // Краснодар\r\n        return getLocation(latitude, longitude = '38.975313');\r\n     default: return;\r\n    }\r\n  }\r\n\r\n  const cls = [\r\n    'select-past__city',\r\n    cityLocation === null ? null : 'select-past__city--active',\r\n  ];\r\n\r\n  return (\r\n      <select\r\n        onChange={ setCityLocation }\r\n        className={ cls.join(' ').trim() }\r\n        defaultValue=\"Select city\"\r\n      >\r\n      {\r\n        CITIES.map(option => (\r\n          <option\r\n            key={option.name}\r\n            value={option.lat}\r\n            disabled={option.disabled}\r\n            hidden={option.hidden}\r\n          >\r\n            {option.name}\r\n          </option>\r\n        ))  \r\n      }\r\n      </select>\r\n  )\r\n}\r\n\r\nexport default SelectCityPast;","const today = new Date().getTime()\r\nconst days = 86400000 //number of milliseconds in a day\r\nconst fiveDaysAgo:string = new Date(today - (5 * days)).toJSON().slice(0, 10)\r\n\r\nexport default fiveDaysAgo","const today = new Date().getTime()\r\nconst days = 86400000 //number of milliseconds in a day\r\nconst oneDayAgo:string = new Date(today - (1 * days)).toJSON().slice(0, 10)\r\n\r\nexport default oneDayAgo","import React, { useEffect, useRef } from 'react';\r\nimport './select-date.scss';\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\nimport fiveDaysAgo from '../../utils/to5DaysAgo';\r\nimport oneDayAgo from '../../utils/to1DayAgo';\r\nimport { useActions } from '../../hooks/useActions';\r\n\r\n\r\nconst SelectDate:React.FC = () => {\r\n\r\n  const { unixDate } = useTypedSelector((state) => state.pastCardInfo);\r\n  \r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n  const wrapperRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n\r\n    const input:HTMLInputElement | null = inputRef.current;\r\n    const wrapper:HTMLDivElement | null = wrapperRef.current;\r\n\r\n    const addClass = () => {\r\n      wrapper!.classList.add('select-past__hide-placeholder');\r\n    }\r\n\r\n    const removeClass = () => {\r\n      wrapper!.classList.remove('select-past__hide-placeholder');\r\n    }\r\n\r\n    input!.addEventListener('focus', addClass);\r\n\r\n    if (!unixDate) {\r\n      input!.addEventListener('blur', removeClass);\r\n    }\r\n    \r\n    return () => {\r\n      input!.removeEventListener('focus', addClass);\r\n      input!.removeEventListener('blur', removeClass);\r\n    }\r\n\r\n  }, [unixDate]);\r\n\r\n  const { getDate, fetchPastForecast } = useActions();\r\n\r\n  const setDate = (e:React.ChangeEvent<HTMLInputElement>) => {\r\n\r\n    const date = e.target.value;\r\n    const unixDate = new Date(`${date}`).getTime() / 1000;\r\n\r\n    if (unixDate > Date.now() / 1000) return;\r\n\r\n    getDate(unixDate);\r\n    fetchPastForecast();\r\n  };\r\n\r\n  const cls = [\r\n    'select-past__date',\r\n    unixDate === null ? null : 'select-past__date--active',\r\n  ];\r\n\r\n  return (\r\n    <div\r\n      className=\"select-past__wrapper\"\r\n      ref={ wrapperRef }\r\n    >\r\n      <input\r\n        className={ cls.join(' ').trim() }\r\n        type=\"date\"\r\n        ref={ inputRef }\r\n        onChange={setDate}\r\n        min={fiveDaysAgo}\r\n        max={oneDayAgo}\r\n      />\r\n      <p className=\"select-past__placeholder\">\r\n        Select date\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SelectDate;","import React from 'react';\r\nimport './unit-past.scss';\r\nimport { getDate } from '../../utils/getDate';\r\nimport { IPastData } from '../../types/pastData';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\ninterface IPastState {\r\n  pastData:IPastData\r\n};\r\n\r\nconst UnitPast:React.FC = () => {\r\n  \r\n  const pastDataForecast = useSelector((state: IPastState) => state.pastData);\r\n\r\n  const hourResult = pastDataForecast.hourly[11]; // 11:00\r\n\r\n  const date:string = getDate(pastDataForecast.current.dt);\r\n  const temp:number = Math.round(hourResult.temp);\r\n\r\n  return (\r\n    <div className=\"card-forcast__unit unit-past\">\r\n      <p className=\"unit-past__date\">\r\n        { date }\r\n      </p>\r\n      {\r\n        hourResult.weather.map(result => {\r\n\r\n          let url = 'http://openweathermap.org/img/wn/' + result.icon + '@2x.png';\r\n          return (\r\n            <img\r\n              key={ result.id }\r\n              className=\"unit-past__image\"\r\n              src={ url }\r\n              alt={ result.description }\r\n            />\r\n          )\r\n        })\r\n      }\r\n      <div className=\"unit-past__tmp\">\r\n        <span className=\"unit-past__num\">\r\n        { temp >= 0 ? `+${temp}` : temp }\r\n        </span>\r\n        <span>°</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UnitPast;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Loader from '../loader/Loader';\r\nimport SelectCityPast from '../select-city-past/selectCityPast';\r\nimport SelectDate from '../select-date/SelectDate';\r\nimport UnitPast from '../unit-past/UnitPast';\r\nimport Placeholder from '../placeholder/Placeholder'\r\nimport { IStateLoading } from '../../types/app';\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\nimport { IPastData } from '../../types/pastData';\r\n\r\n\r\ninterface ILoading {\r\n  app:IStateLoading\r\n};\r\n\r\ninterface IPastState {\r\n  pastData: IPastData\r\n};\r\n\r\nconst CardPast: React.FC = () => {\r\n\r\n  const { loadingPastForecast } = useTypedSelector((state:ILoading) => state.app);\r\n  const pastDataForecast = useSelector((state:IPastState) => state.pastData);\r\n\r\n  return (\r\n    <article className=\"card-forcast card-forcast--past\">\r\n      <h3 className=\"card-forcast__title card-forcast__title--left\">\r\n        Forecast for a Date in the Past\r\n      </h3>\r\n      <form className=\"card-forcast__select select-past\">\r\n        <SelectCityPast />\r\n        <SelectDate />\r\n      </form>\r\n      {\r\n        loadingPastForecast ? <Loader /> :\r\n        pastDataForecast.hourly ?\r\n        <UnitPast /> : <Placeholder />\r\n      }\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default CardPast;","import React, { useState, useEffect } from 'react';\r\nimport { ReactComponent as IconOffline } from '../../assets/images/offline-icon.svg';\r\nimport './header.scss';\r\n\r\nconst Header:React.FC = (): JSX.Element => {\r\n\r\n  useEffect(() => { \r\n    checkNetworkStatus();\r\n    window.addEventListener('online', checkNetworkStatus);\r\n    window.addEventListener('offline', checkNetworkStatus);\r\n  }, []);\r\n\r\n  const [isOnline, setIsOnline] = useState<boolean>(true);\r\n\r\n  const checkNetworkStatus = (): void => {\r\n    navigator.onLine ?\r\n      setIsOnline(true)\r\n      : setIsOnline(false)\r\n  };\r\n\r\n  return (\r\n    <header className=\"main-title\">\r\n      {!isOnline &&\r\n        <IconOffline\r\n          className=\"status-icon\"\r\n          title=\"offline\"\r\n        />}\r\n      <h2>\r\n        Weather\r\n      </h2>\r\n      <h2>\r\n        forecast\r\n      </h2>\r\n    </header>\r\n  )\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport './footer.scss';\r\n\r\nconst Footer: React.FC = () => (\r\n  <footer className=\"footer\">\r\n   <p>C ЛЮБОВЬЮ ОТ MERCURY DEVELOPMENT</p>\r\n  </footer> \r\n)\r\n\r\nexport default Footer;\r\n\r\n","import React from 'react';\r\nimport CardForcast from './components/card-forcast/CardForcast';\r\nimport CardPast from './components/card-past/CardPast';\r\nimport Title from './components/header/Header';\r\nimport './app.scss';\r\nimport Footer from './components/footer/Footer';\r\n\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <Title />\r\n      <main className=\"container\">\r\n       <CardForcast />\r\n       <CardPast />\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {\r\n  IStateLoading,\r\n  LoaderStatus, AppAction\r\n} from '../../types/app';\r\n\r\n\r\nlet initialState:IStateLoading = {\r\n  loading7DaysForecast: false,\r\n  loadingPastForecast: false,\r\n}\r\n\r\nconst appReducer = (\r\n  state = initialState, action: AppAction\r\n): IStateLoading => {\r\n  switch (action.type) {\r\n    case LoaderStatus.SHOW_LOADER_FORECAST:\r\n      return { ...state, loading7DaysForecast: true }\r\n    case LoaderStatus.HIDE_LOADER_FORECAST:\r\n      return { ...state, loading7DaysForecast: false }\r\n    case LoaderStatus.SHOW_LOADER_PAST:\r\n      return { ...state, loadingPastForecast: true }\r\n    case LoaderStatus.HIDE_LOADER_PAST:\r\n      return { ...state, loadingPastForecast: false }\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport default appReducer;","import {\r\n  Days7Forecast,\r\n  Days7ForecastAction\r\n} from '../../types/forecastData';\r\n\r\n\r\n/* type WeatherData = {\r\n  icon: string\r\n  id: number | null\r\n  description: string\r\n}\r\n\r\nexport type DailyData = {\r\n  dt: number | null\r\n  temp: { eve: number | null }\r\n  weather: WeatherData[]\r\n}\r\n\r\nexport type ForecastData = {\r\n  daily: DailyData[]\r\n}\r\n\r\nconst initialState: ForecastData = {\r\n  daily: [\r\n    {\r\n      dt: null,\r\n      temp: { eve: null },\r\n      weather: [{\r\n        icon: '',\r\n        description: '',\r\n        id: null\r\n       } ]\r\n    }\r\n  ]\r\n}; */\r\n\r\nconst initialState = {};\r\n\r\nconst forecastDataReducer = (\r\n  state = initialState, action: Days7ForecastAction) => {\r\n  switch (action.type) {\r\n    case Days7Forecast.FETCH_7DAYSFORECAST:\r\n      return { ...state, ...action.data };\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default forecastDataReducer;","import { PastDataAction, PastData } from '../../types/pastData';\r\n\r\n/* let initialState = {\r\n  current: { dt: null },\r\n  hourly: [\r\n    {\r\n      temp: null,\r\n      weather: []\r\n   }\r\n  ],\r\n}; */\r\n\r\nlet initialState = {};\r\n\r\nconst pastDataReducer = (\r\n  state = initialState, action: PastDataAction) => {\r\n  switch (action.type) {\r\n    case PastData.FETCH_PAST_FORECAST:\r\n      return action.data;\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default pastDataReducer;","import {\r\n  IPastCardState,\r\n  PastCard,\r\n  PastCardAction\r\n} from '../../types/pastCard';\r\n\r\n\r\nlet initialState: IPastCardState = {\r\n  unixDate: null,\r\n  cityLocation: null,\r\n};\r\n\r\nconst pastCardReducer = (\r\n  state = initialState, action: PastCardAction\r\n): IPastCardState => {\r\n  switch (action.type) {\r\n    case PastCard.GET_DATE:\r\n      return { ...state, unixDate: action.unixDate }\r\n    case PastCard.GET_LOCATION:\r\n      return { ...state, cityLocation: action.cityLocation }\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default pastCardReducer;","import { combineReducers } from 'redux';\r\nimport appReducer from './app';\r\nimport forecastDataReducer from './forecastData';\r\nimport pastDataReducer from './pastData';\r\nimport pastCardReducer from './pastCard';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  app: appReducer,\r\n  forecastData: forecastDataReducer,\r\n  pastData: pastDataReducer,\r\n  pastCardInfo: pastCardReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        console.log('No service worker found')\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './store/reducers/rootReducer';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\n\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}