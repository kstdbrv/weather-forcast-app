{"version":3,"sources":["axios/axios.ts","store/actions/actionTypes.tsx","store/actions/app.tsx","store/actions/getWeather.tsx","cities/cities.ts","components/select-city/SelectCity.tsx","components/loader/Loader.tsx","utils/utils.ts","components/unit-forecast/UnitForecast.tsx","assets/images/placeholder.svg","components/placeholder/Placeholder.tsx","components/card-forcast/CardForcast.tsx","store/actions/getLocation.tsx","components/select-city-past/SelectCityPast.tsx","components/select-date/SelectDate.tsx","store/actions/getDate.tsx","components/unit-past/UnitPast.tsx","components/card-past/CardPast.tsx","components/header/Header.tsx","components/footer/Footer.tsx","App.tsx","store/reducers/app.tsx","store/reducers/forecastData.tsx","store/reducers/pastData.tsx","store/reducers/pastCard.tsx","store/reducers/handleClick.ts","store/reducers/rootReducer.tsx","reportWebVitals.ts","index.tsx"],"names":["axios","create","baseURL","source","CancelToken","isCancel","SHOW_LOADER_FORECAST","SHOW_LOADER_PAST","HIDE_LOADER_FORECAST","HIDE_LOADER_PAST","FETCH_7DAYSFORECAST","FETCH_PAST_FORECAST","GET_DATE","GET_LOCATION","HANDLE_NEXT","HANDLE_PREV","showLoaderForcast","type","hideLoaderForcast","hideLoaderPast","API_KEY","process","fetch7DayForecast","lat","lon","part","dispatch","a","url","get","cancelToken","token","response","data","console","log","message","fetchPastForecast","getState","pastCardInfo","unixDate","cityLocation","CITIES","name","disabled","hidden","SelectCity","useDispatch","cls","Object","keys","length","className","onChange","e","target","value","join","defaultValue","map","option","Loader","getDate","unixTimestamp","date","Date","dd","yyyy","getFullYear","getMonth","toStrMonth","getTemp","currentTemp","temp","Math","round","toString","isAddPlus","UnitForecast","props","forecastData","useSelector","state","window","screen","width","daily","card","day","dt","eve","weather","result","icon","src","alt","description","id","Placeholder","Fragment","image","CardForcast","loading","app","loadingForecast","cardsToShow","useRef","useState","setResult","isInctiveNext","current","includes","isAIntivePrev","clsPrev","clsNext","hourly","trim","onClick","prevCards","prev","nextCards","getLocation","SelectCityPast","SelectDate","inputRef","wrapperRef","useEffect","input","wrapper","addClass","classList","add","removeClass","remove","addEventListener","removeEventListener","ref","getTime","now","UnitPast","pastData","hourResult","CardPast","loadingPast","Header","Footer","App","initialState","appReducer","action","forecastDataReducer","pastDataReducer","pastCardReducer","clickReducer","cards","rootReducer","combineReducers","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a2148570.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://api.openweathermap.org/data/2.5'\r\n})\r\n\r\nconst cancelToken = axios.CancelToken;\r\nexport const source = cancelToken.source();\r\n\r\nexport const isCancel = axios.isCancel;\r\n\r\n\r\n\r\n/* const instance = axios.create();\r\ninstance.CancelToken = axios.CancelToken;\r\ninstance.isCancel = axios.isCancel; */","export const SHOW_LOADER_FORECAST = 'APP/SHOW_LOADER_FORECAST';\r\nexport const SHOW_LOADER_PAST = 'APP/SHOW_LOADER_PAST';\r\nexport const HIDE_LOADER_FORECAST = 'APP/HIDE_LOADER_FORECAST';\r\nexport const HIDE_LOADER_PAST = 'APP/HIDE_LOADER_PAST';\r\n\r\nexport const FETCH_7DAYSFORECAST = 'FETCH_7DAYSFORECAST';\r\nexport const FETCH_PAST_FORECAST = 'FETCH_PAST_FORECAST';\r\n\r\nexport const GET_DATE = 'GET_DATE';\r\nexport const GET_LOCATION = 'GET_LOCATION';\r\n\r\nexport const HANDLE_NEXT = 'HANDLE_NEXT';\r\nexport const HANDLE_PREV = 'HANDLE_PREV';\r\n","import {\r\n  SHOW_LOADER_FORECAST, HIDE_LOADER_PAST,\r\n  HIDE_LOADER_FORECAST, SHOW_LOADER_PAST,\r\n} from './actionTypes';\r\n\r\nexport function showLoaderForcast() {\r\n  return {\r\n    type: SHOW_LOADER_FORECAST\r\n  }\r\n}\r\n\r\nexport function hideLoaderForcast() {\r\n  return {\r\n    type: HIDE_LOADER_FORECAST\r\n  }\r\n}\r\n\r\nexport function showLoaderPast() {\r\n  return {\r\n    type: SHOW_LOADER_PAST\r\n  }\r\n}\r\n\r\nexport function hideLoaderPast() {\r\n  return {\r\n    type: HIDE_LOADER_PAST\r\n  }\r\n}","import axios from '../../axios/axios';\r\nimport { source } from '../../axios/axios';\r\nimport { isCancel } from '../../axios/axios';\r\nimport {\r\n  FETCH_7DAYSFORECAST, FETCH_PAST_FORECAST\r\n} from './actionTypes';\r\nimport {\r\n  hideLoaderPast, showLoaderForcast,\r\n  showLoaderPast, hideLoaderForcast,\r\n} from './app';\r\n\r\n\r\nconst API_KEY = process.env.REACT_APP_API_REY;\r\n\r\nexport function fetch7DayForecast(lat, lon, part = '') {\r\n\r\n  return async dispatch => {\r\n    try {\r\n\r\n      dispatch(showLoaderForcast());\r\n\r\n      const url = `/onecall?lat=${lat}&lon=${lon}&exclude=${part}&units=metric&appid=${API_KEY}`;\r\n      const response = await axios.get(url, { cancelToken: source.token });\r\n\r\n      dispatch({\r\n        type: FETCH_7DAYSFORECAST,\r\n        data: response.data\r\n      });\r\n\r\n      dispatch(hideLoaderForcast());\r\n\r\n    } catch (thrown) {\r\n      if (isCancel(thrown)) {\r\n        console.log('Request canceled', thrown.message);\r\n        /* dispatch(showAlert('Что-то пошло не так...', 'danger')) */\r\n        dispatch(hideLoaderForcast());\r\n      } else {\r\n        /* dispatch(showAlert('Что-то пошло не так...', 'danger')) */\r\n        dispatch(hideLoaderForcast());\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function fetchPastForecast() {\r\n  \r\n  return async (dispatch, getState) => {\r\n\r\n    const { pastCardInfo } = getState();\r\n    \r\n    let unixDate = pastCardInfo.unixDate;\r\n    let cityLocation = pastCardInfo.cityLocation;\r\n\r\n    if (unixDate === null || cityLocation === null) return;\r\n    \r\n    const { lat, lon } = cityLocation;\r\n    \r\n    try {\r\n      dispatch(showLoaderPast());\r\n\r\n      const url = `/onecall/timemachine?lat=${lat}&lon=${lon}&dt=${unixDate}&units=metric&appid=${API_KEY}`;\r\n      const response = await axios.get(url, { cancelToken: source.token });\r\n\r\n      dispatch({\r\n        type: FETCH_PAST_FORECAST,\r\n        data: response.data\r\n      });\r\n\r\n      dispatch(hideLoaderPast());\r\n\r\n    } catch (thrown) {\r\n      if (isCancel(thrown)) {\r\n        console.log('Request canceled', thrown.message);\r\n        /* dispatch(showAlert('Что-то пошло не так...', 'danger')) */\r\n        dispatch(hideLoaderPast());\r\n      } else {\r\n        /* dispatch(showAlert('Что-то пошло не так...', 'danger')) */\r\n        dispatch(hideLoaderPast());\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","\r\nexport const CITIES = [\r\n  { name: 'Select city', disabled: true, hidden: true },\r\n  { name: 'Самара', lat: '53.195873' },\r\n  { name: 'Тольятти', lat: '53.507836' },\r\n  { name: 'Саратов', lat: '51.533557' },\r\n  { name: 'Казань', lat: '55.796127' },\r\n  { name: 'Краснодар', lat: '45.035470' },\r\n];","import './select-city.scss';\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetch7DayForecast } from '../../store/actions/getWeather';\r\nimport { CITIES } from '../../cities/cities';\r\n\r\n\r\nconst SelectCity = ({ data }) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = e => { \r\n    let lon;\r\n    let lat = e.target.value;\r\n    switch (lat) {\r\n     case '53.195873': // Самара\r\n      return dispatch(fetch7DayForecast(lat, lon = '50.100193'));\r\n     case '53.507836': // Тольятти\r\n      return dispatch(fetch7DayForecast(lat, lon = '49.420393'));\r\n     case '51.533557': // Саратов\r\n      return dispatch(fetch7DayForecast(lat, lon = '46.034257'));\r\n     case '55.796127': // Казань\r\n      return dispatch(fetch7DayForecast(lat, lon = '49.106405'));  \r\n     case '45.035470': // Краснодар\r\n      return dispatch(fetch7DayForecast(lat, lon = '38.975313'));\r\n     default: return;\r\n    }\r\n  }\r\n  \r\n  let isEmpty = Object.keys(data);\r\n  const cls = [\r\n    'select-future__city',\r\n    isEmpty.length ? 'select-future__city--active' : null,\r\n  ];\r\n\r\n  return (\r\n    <form className=\"card-forcast__select select-future\">\r\n      <select \r\n        onChange={ handleChange }\r\n        className={ cls.join(' ') }\r\n        defaultValue=\"Select city\"\r\n      >\r\n      {\r\n        CITIES.map(option => (\r\n          <option\r\n            key={ option.name }\r\n            value={ option.lat }\r\n            disabled={ option.disabled }\r\n            hidden={ option.hidden }\r\n          >\r\n            { option.name }\r\n          </option>\r\n        ))  \r\n      }\r\n      </select>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default SelectCity;","import React from 'react';\r\nimport './Loader.scss';\r\n\r\nconst Loader: React.FC = () => (\r\n  \r\n    <div className='loader-centre'>\r\n      <div className=\"lds-roller\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n)\r\n\r\nexport default Loader;","\r\nexport function getDate(unixTimestamp:number):string {\r\n\r\n  const date = new Date(unixTimestamp * 1000);\r\n\r\n  let dd: number | string = date.getDate();\r\n  \r\n  if (dd < 10) { dd = '0' + dd };\r\n\r\n  const yyyy: number = date.getFullYear();\r\n  \r\n  type Date = string | undefined;\r\n\r\n  function toStrMonth():Date {\r\n    const mm:number = date.getMonth() + 1;\r\n    switch (mm) {\r\n      case 1: return 'jan';\r\n      case 2: return 'feb';\r\n      case 3: return 'mar';\r\n      case 4: return 'apr';\r\n      case 5: return 'may';\r\n      case 6: return 'jun';\r\n      case 7: return 'jul';\r\n      case 8: return 'aug';\r\n      case 9: return 'sep';\r\n      case 10: return 'oct';\r\n      case 11: return 'nov';\r\n      case 12: return 'dec';\r\n      default: return;\r\n   }\r\n  }\r\n\r\n  const mm:Date = toStrMonth();\r\n  const currentDate = dd + ' ' + mm + ' ' + yyyy;\r\n\r\n  return currentDate\r\n}\r\n\r\nexport function getTemp(currentTemp:number):string {\r\n\r\n  let temp:any = Math.round(currentTemp);\r\n\r\n  function isAddPlus():string | undefined {\r\n    if ( currentTemp >= 0 ) {\r\n      return '+' + temp.toString()\r\n    }\r\n  }\r\n\r\n  temp = isAddPlus();\r\n\r\n  return temp\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { getDate, getTemp  } from '../../utils/utils';\r\nimport './unit-forecast.scss';\r\n\r\n\r\nconst UnitForecast: React.FC<any> = (props) => {\r\n  \r\n  interface IRootState {\r\n    forecastData: {\r\n      daily: any\r\n    }\r\n  };\r\n\r\n  let data = useSelector((state: IRootState) => state.forecastData);\r\n  let forecastData;\r\n\r\n  if (window.screen.width > 768 && !!props.data.length) {\r\n      \r\n    forecastData = props.data;\r\n  } else if (window.screen.width < 768) {\r\n    \r\n     forecastData = data.daily;\r\n  } else {\r\n    \r\n      const cards = [0, 1, 2];\r\n      forecastData = cards.map(card => {\r\n        return data.daily[card]\r\n      }); \r\n    };\r\n  \r\n  return forecastData.map(day => {\r\n \r\n    const date:string = getDate(day.dt);\r\n    const temp:string = getTemp(day.temp.eve);\r\n    return (\r\n        <div \r\n        key={ day.dt }\r\n        className=\"unit-forecast\"\r\n        >\r\n          <p className=\"unit-forecast__date\">\r\n            { date }\r\n          </p>\r\n        {\r\n          day.weather.map(result => {\r\n\r\n            let url = 'http://openweathermap.org/img/wn/' + result.icon + '@2x.png';\r\n            return (\r\n              <img\r\n                key={ result.id }\r\n                className=\"unit-forecast__image\"\r\n                src={ url }\r\n                alt={ result.description }\r\n              />\r\n            )\r\n          })\r\n        }\r\n          <div className=\"unit-forecast__tmp\">\r\n            <span className=\"unit-forecast__num\">\r\n              { temp }\r\n            </span>\r\n            <span>°</span>\r\n          </div>\r\n        </div>\r\n    )\r\n  })\r\n}\r\n\r\nexport default UnitForecast;","export default __webpack_public_path__ + \"static/media/placeholder.a6938fd6.svg\";","import React from 'react';\r\nimport image from '../../assets/images/placeholder.svg';\r\nimport './placeholder.scss';\r\n\r\nconst Placeholder: React.FC = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <img\r\n       className=\"card-forcast__placeholder\"\r\n       src={ image }\r\n       alt=\"картинка вместо погоды\"\r\n      />\r\n      <p className=\"card-forcast__text\">\r\n        Fill in all the fields and\r\n        the weather will be displayed\r\n      </p>    \r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Placeholder;","import React, { useRef, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './card-forcast.scss';\r\nimport SelectCity from '../select-city/SelectCity';\r\nimport Loader from '../loader/Loader';\r\nimport UnitForecast from '../unit-forecast/UnitForecast';\r\nimport Placeholder from '../placeholder/Placeholder';\r\n\r\n\r\nconst CardForcast: React.FC = () => {\r\n\r\n  interface IApp {\r\n    app: { loadingForecast: boolean }\r\n  };\r\n\r\n  const loading = useSelector((state:IApp) => state.app.loadingForecast);\r\n  const data = useSelector((state: any) => state.forecastData);\r\n\r\n  const cardsToShow = useRef([0, 1, 2]);\r\n  const [result, setResult] = useState([]);\r\n\r\n  const isInctiveNext = cardsToShow.current.includes(7);\r\n  const isAIntivePrev = cardsToShow.current.includes(0);\r\n\r\n  const handleNext = () => {\r\n    if (isInctiveNext) return;\r\n    \r\n    const nextCards = cardsToShow.current.map(card => {\r\n      return card + 1\r\n    });\r\n    cardsToShow.current = nextCards;\r\n\r\n    console.log('nextCards', nextCards)\r\n    \r\n    const result: any = nextCards.map(card => {\r\n      return data.daily[card]\r\n    });\r\n\r\n    setResult(prev => result);\r\n  };\r\n\r\n  const handlePrev = () => {\r\n    if (isAIntivePrev) return;\r\n    \r\n    const prevCards = cardsToShow.current.map(card => {\r\n      return card - 1\r\n    });\r\n    cardsToShow.current = prevCards;\r\n\r\n    const result: any = prevCards.map(card => {\r\n      return data.daily[card]\r\n    });\r\n\r\n    setResult(prev => result);\r\n  };\r\n\r\n  const clsPrev = [\r\n    'arrow arrow-prev',\r\n    isAIntivePrev ? 'arrow--disabled' : '',\r\n  ];\r\n\r\n  const clsNext = [\r\n    'arrow arrow-next',\r\n    isInctiveNext ? 'arrow--disabled' : '',\r\n  ];\r\n  \r\n  return (\r\n    \r\n    <article className=\"card-forcast card-forcast--future\">\r\n      <h3 className=\"card-forcast__title\">\r\n        7 Days Forecast\r\n      </h3>\r\n      <SelectCity data={ data } />\r\n      {\r\n        loading ? <Loader /> :\r\n        data.hourly ?\r\n            <div className=\"card-forcast__wrapper\">\r\n              <div className=\"card-forcast__overflow\">\r\n                <UnitForecast data={ result } />\r\n                <div\r\n                  className={ clsPrev.join(' ').trim() }\r\n                  onClick={ handlePrev }\r\n                ></div>\r\n                <div\r\n                  className={ clsNext.join(' ').trim() }\r\n                  onClick={ handleNext }\r\n                ></div>\r\n              </div>\r\n            </div>\r\n            : <Placeholder />\r\n      }\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default CardForcast;","import { GET_LOCATION } from './actionTypes';\r\nimport { fetchPastForecast } from './getWeather';\r\n\r\nexport function getLocation(lat, lon) {\r\n\r\n  return dispatch => {\r\n    dispatch({\r\n      type: GET_LOCATION,\r\n      cityLocation: { lat, lon }\r\n    });\r\n    dispatch(fetchPastForecast());\r\n }\r\n}","import './select-city-past.scss';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getLocation } from '../../store/actions/getLocation';\r\nimport { CITIES } from '../../cities/cities';\r\nimport { ICardInfo } from '../../interfaces';\r\n\r\n\r\nconst SelectCityPast:React.FC = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const data = useSelector((state:ICardInfo) => state.pastCardInfo.cityLocation);\r\n\r\n  const handleChange = e => { \r\n    let lon;\r\n    let lat = e.target.value;\r\n    switch (lat) {\r\n     case '53.195873': // Самара\r\n        return dispatch(getLocation(lat, lon = '50.100193',));\r\n     case '53.507836': // Тольятти\r\n        return dispatch(getLocation(lat, lon = '49.420393'));\r\n     case '51.533557': // Саратов\r\n        return dispatch(getLocation(lat, lon = '46.034257'));\r\n     case '55.796127': // Казань\r\n        return dispatch(getLocation(lat, lon = '49.106405'));\r\n     case '45.035470': // Краснодар\r\n        return dispatch(getLocation(lat, lon = '38.975313'));\r\n     default: return;\r\n    }\r\n  }\r\n\r\n  const cls = [\r\n    'select-past__city',\r\n    data === null ? null : 'select-past__city--active',\r\n  ];\r\n\r\n  return (\r\n      <select\r\n        onChange={ handleChange }\r\n        className={ cls.join(' ').trim() }\r\n        defaultValue=\"Select city\"\r\n      >\r\n      {\r\n        CITIES.map(option => (\r\n          <option\r\n            key={option.name}\r\n            value={option.lat}\r\n            disabled={option.disabled}\r\n            hidden={option.hidden}\r\n          >\r\n            {option.name}\r\n          </option>\r\n        ))  \r\n      }\r\n      </select>\r\n  )\r\n}\r\n\r\nexport default SelectCityPast;","import React, { useEffect, useRef } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './select-date.scss';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getDate } from '../../store/actions/getDate';\r\nimport { fetchPastForecast } from '../../store/actions/getWeather';\r\nimport { ICardInfo } from '../../interfaces'\r\n\r\n\r\nconst SelectDate:React.FC = () => {\r\n\r\n  const data = useSelector((state: ICardInfo) => state.pastCardInfo.unixDate);\r\n  \r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n  const wrapperRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n\r\n    const input:HTMLInputElement | null = inputRef.current;\r\n    const wrapper:HTMLDivElement | null = wrapperRef.current;\r\n\r\n    const addClass = () => {\r\n      wrapper!.classList.add('select-past__hide-placeholder');\r\n    }\r\n\r\n    const removeClass = () => {\r\n      wrapper!.classList.remove('select-past__hide-placeholder');\r\n    }\r\n\r\n    input!.addEventListener('focus', addClass);\r\n\r\n    if (!data) {\r\n      input!.addEventListener('blur', removeClass);\r\n    }\r\n    \r\n    return () => {\r\n      input!.removeEventListener('focus', addClass);\r\n      input!.removeEventListener('blur', removeClass);\r\n    }\r\n\r\n  }, [data]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = e => {\r\n\r\n    const date = e.target.value;\r\n    const unixDate = new Date(`${date}`).getTime() / 1000;\r\n\r\n    if (unixDate > Date.now() / 1000) return;\r\n\r\n    dispatch(getDate(unixDate));\r\n    dispatch(fetchPastForecast());\r\n  };\r\n\r\n  const cls = [\r\n    'select-past__date',\r\n    data === null ? null : 'select-past__date--active',\r\n  ];\r\n\r\n  return (\r\n    <div\r\n      className=\"select-past__wrapper\"\r\n      ref={ wrapperRef }\r\n    >\r\n      <input\r\n        className={ cls.join(' ').trim() }\r\n        type=\"date\"\r\n        ref={ inputRef }\r\n        onChange={ handleChange }\r\n      />\r\n      <p className=\"select-past__placeholder\">\r\n        Select date\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SelectDate;","import { GET_DATE } from './actionTypes';\r\n\r\nexport function getDate(unixDate) {\r\n  return {\r\n    type: GET_DATE,\r\n    unixDate\r\n }\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './unit-past.scss';\r\nimport { getDate, getTemp  } from '../../utils/utils';\r\n\r\n\r\nconst UnitPast:React.FC = () => {\r\n  \r\n  const data = useSelector((state: any) => state.pastData);\r\n\r\n  const hourResult = data.hourly[11]; // 11:00\r\n\r\n  const date:string = getDate(data.current.dt);\r\n  const temp:string = getTemp(hourResult.temp);\r\n\r\n\r\n  return (\r\n    <div className=\"card-forcast__unit unit-past\">\r\n      <p className=\"unit-past__date\">\r\n        { date }\r\n      </p>\r\n      {\r\n        hourResult.weather.map(result => {\r\n\r\n          let url = 'http://openweathermap.org/img/wn/' + result.icon + '@2x.png';\r\n          return (\r\n            <img\r\n              key={ result.id }\r\n              className=\"unit-past__image\"\r\n              src={ url }\r\n              alt={ result.description }\r\n            />\r\n          )\r\n        })\r\n      }\r\n      <div className=\"unit-past__tmp\">\r\n        <span className=\"unit-past__num\">\r\n          { temp }\r\n        </span>\r\n        <span>°</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UnitPast;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Loader from '../loader/Loader';\r\nimport SelectCityPast from '../select-city-past/SelectCityPast';\r\nimport SelectDate from '../select-date/SelectDate';\r\nimport UnitPast from '../unit-past/UnitPast';\r\nimport Placeholder from '../placeholder/Placeholder'\r\n\r\n\r\nconst CardPast: React.FC = () => {\r\n\r\n  interface IApp {\r\n    app: { loadingPast: boolean }\r\n  };\r\n\r\n  const loading = useSelector((state:IApp) => state.app.loadingPast);\r\n  const data = useSelector((state:any) => state.pastData);\r\n\r\n  return (\r\n    <article className=\"card-forcast card-forcast--past\">\r\n      <h3 className=\"card-forcast__title card-forcast__title--left\">\r\n        Forecast for a Date in the Past\r\n      </h3>\r\n      <form className=\"card-forcast__select select-past\">\r\n        <SelectCityPast />\r\n        <SelectDate />\r\n      </form>\r\n      {\r\n        loading ? <Loader /> :\r\n        data.hourly ?\r\n        <UnitPast /> : <Placeholder />\r\n      }\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default CardPast;","import React from 'react';\r\nimport './header.scss';\r\n\r\nconst Header: React.FC = () => (\r\n  \r\n    <header className=\"main-title\">\r\n     <h2>\r\n       Weather\r\n     </h2>\r\n     <h2>\r\n      forecast \r\n     </h2>\r\n   </header>\r\n)\r\n\r\nexport default Header;","import React from 'react';\r\nimport './footer.scss';\r\n\r\nconst Footer: React.FC = () => (\r\n  <footer className=\"footer\">\r\n   <p>C ЛЮБОВЬЮ ОТ MERCURY DEVELOPMENT</p>\r\n  </footer> \r\n)\r\n\r\nexport default Footer;\r\n\r\n","import React from 'react';\nimport CardForcast from './components/card-forcast/CardForcast';\nimport CardPast from './components/card-past/CardPast';\nimport Title from './components/header/Header';\nimport './app.scss';\nimport Footer from './components/footer/Footer';\n\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"wrapper\">\n      <Title />\n      <main className=\"container\">\n       <CardForcast />\n       <CardPast />\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import {\r\n  SHOW_LOADER_FORECAST, HIDE_LOADER_PAST,\r\n  HIDE_LOADER_FORECAST, SHOW_LOADER_PAST,\r\n} from '../actions/actionTypes';\r\n\r\nlet initialState = {\r\n  loadingForecast: false,\r\n  loadingPast: false,\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SHOW_LOADER_FORECAST:\r\n      return { ...state, loadingForecast: true }\r\n    case HIDE_LOADER_FORECAST:\r\n      return { ...state, loadingForecast: false }\r\n    case SHOW_LOADER_PAST:\r\n      return { ...state, loadingPast: true }\r\n    case HIDE_LOADER_PAST:\r\n      return { ...state, loadingPast: false }\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport default appReducer;","import { FETCH_7DAYSFORECAST } from '../actions/actionTypes';\r\n\r\nlet initialState = {};\r\n\r\nconst forecastDataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_7DAYSFORECAST:\r\n      return action.data;\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default forecastDataReducer;","import { FETCH_PAST_FORECAST } from '../actions/actionTypes';\r\n\r\nlet initialState = {};\r\n\r\nconst pastDataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_PAST_FORECAST:\r\n      return action.data;\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default pastDataReducer;","import { GET_DATE, GET_LOCATION } from '../actions/actionTypes';\r\n\r\nlet initialState = {\r\n  unixDate: null,\r\n  cityLocation: null,\r\n}\r\n\r\nconst pastCardReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_DATE:\r\n      return { ...state, unixDate: action.unixDate }\r\n    case GET_LOCATION:\r\n      return { ...state, cityLocation: action.cityLocation }\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default pastCardReducer;","import { HANDLE_PREV, HANDLE_NEXT } from '../actions/actionTypes';\r\n\r\nconst initialState:number[] = [0, 1, 2];\r\n\r\nconst clickReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case HANDLE_PREV:\r\n      return action.cards\r\n    case HANDLE_NEXT:\r\n      return action.cards\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport default clickReducer;","import { combineReducers } from 'redux';\r\nimport appReducer from './app';\r\nimport forecastDataReducer from './forecastData';\r\nimport pastDataReducer from './pastData';\r\nimport pastCardReducer from './pastCard';\r\nimport clickReducer from './handleClick';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  app: appReducer,\r\n  forecastData: forecastDataReducer,\r\n  pastData: pastDataReducer,\r\n  pastCardInfo: pastCardReducer,\r\n  cardsToShow: clickReducer\r\n})\r\n\r\nexport default rootReducer;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './store/reducers/rootReducer';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n)  \r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <App /> \r\n  </Provider>\r\n)\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}