{"version":3,"sources":["types/forecastData.ts","types/pastData.ts","types/app.ts","axios/axios.ts","store/actions/app.ts","store/actions/getWeather.ts","cities/cities.ts","components/select-city/SelectCity.tsx","components/loader/Loader.tsx","utils/getDate.ts","types/pastCard.ts","components/unit-forecast/UnitForecast.tsx","assets/images/placeholder.svg","components/placeholder/Placeholder.tsx","components/card-forcast/CardForcast.tsx","store/actions/getLocation.ts","hooks/useTypedSelector.ts","components/select-city-past/SelectCityPast.tsx","utils/to5DaysAgo.ts","components/select-date/SelectDate.tsx","store/actions/getDate.ts","components/unit-past/UnitPast.tsx","components/card-past/CardPast.tsx","components/header/Header.tsx","components/footer/Footer.tsx","App.tsx","store/reducers/app.ts","store/reducers/forecastData.ts","store/reducers/pastData.ts","store/reducers/pastCard.ts","store/reducers/rootReducer.ts","reportWebVitals.ts","index.tsx"],"names":["Days7Forecast","PastData","LoaderStatus","axios","create","baseURL","source","CancelToken","isCancel","showLoaderForcast","type","SHOW_LOADER_FORECAST","hideLoaderForcast","HIDE_LOADER_FORECAST","hideLoaderPast","HIDE_LOADER_PAST","API_KEY","process","fetch7DayForecast","lat","lon","part","dispatch","a","url","get","cancelToken","token","response","FETCH_7DAYSFORECAST","data","console","log","message","fetchPastForecast","getState","pastCardInfo","unixDate","cityLocation","SHOW_LOADER_PAST","FETCH_PAST_FORECAST","CITIES","name","disabled","hidden","SelectCity","useDispatch","cls","Object","keys","length","className","onChange","e","target","value","join","defaultValue","map","option","Loader","getDate","unixTimestamp","date","Date","dd","yyyy","getFullYear","getMonth","toStrMonth","PastCard","UnitForecast","props","forecastData","useSelector","state","window","screen","width","daily","card","day","dt","temp","Math","round","eve","weather","result","icon","src","alt","description","id","Placeholder","Fragment","image","CardForcast","loading","app","loadingForecast","cardsToShow","useRef","useState","setResult","isInctiveNext","current","includes","isAIntivePrev","clsPrev","clsNext","hourly","trim","onClick","prevCards","prev","nextCards","getLocation","GET_LOCATION","useTypedSelector","SelectCityPast","today","getTime","fiveDaysAgo","toJSON","slice","SelectDate","inputRef","wrapperRef","useEffect","input","wrapper","addClass","classList","add","removeClass","remove","addEventListener","removeEventListener","ref","now","GET_DATE","min","max","UnitPast","pastData","hourResult","CardPast","loadingPast","Header","Footer","App","initialState","appReducer","action","forecastDataReducer","pastDataReducer","pastCardReducer","rootReducer","combineReducers","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0bd5b8dc.chunk.js","sourcesContent":["interface IWeatherData {\r\n  icon: string\r\n  id: number\r\n  description: string\r\n};\r\n\r\nexport interface IForecastData {\r\n  dt: number\r\n  temp: { eve: number }\r\n  weather: IWeatherData[]\r\n};\r\n\r\nexport enum Days7Forecast {\r\n  FETCH_7DAYSFORECAST = 'FETCH_7DAYSFORECAST'\r\n};\r\n\r\nexport type Days7ForecastAction = {\r\n  type: Days7Forecast.FETCH_7DAYSFORECAST,\r\n  data: IForecastData\r\n}\r\n\r\n","interface IWeather {\r\n  icon: string,\r\n  id: number,\r\n  description: string,\r\n};\r\n\r\ninterface IHourly {\r\n  temp: number\r\n  weather: IWeather[]\r\n};\r\n\r\n\r\nexport interface IPastData {\r\n  current: { dt: number }\r\n  hourly: IHourly[]\r\n};\r\n\r\nexport type PastDataAction = {\r\n  type: PastData.FETCH_PAST_FORECAST;\r\n  data: IPastData;\r\n};\r\n\r\nexport enum PastData {\r\n  FETCH_PAST_FORECAST = 'FETCH_PAST_FORECAST'\r\n};\r\n","\r\nexport interface IStateLoading {\r\n  loadingForecast: boolean\r\n  loadingPast: boolean\r\n};\r\n\r\ntype ShowLoaderForcast = {\r\n  type: LoaderStatus.SHOW_LOADER_FORECAST;\r\n};\r\n\r\ntype HideLoaderForcast = {\r\n  type: LoaderStatus.HIDE_LOADER_FORECAST;\r\n};\r\n\r\ntype ShowLoaderPast = {\r\n  type: LoaderStatus.SHOW_LOADER_PAST;\r\n};\r\n\r\ntype HideLoaderPast = {\r\n  type: LoaderStatus.HIDE_LOADER_PAST;\r\n};\r\n\r\nexport type AppAction = ShowLoaderForcast | HideLoaderForcast |\r\n                  ShowLoaderPast | HideLoaderPast\r\n\r\nexport enum LoaderStatus {\r\n  SHOW_LOADER_FORECAST = 'SHOW_LOADER_FORECAST',\r\n  HIDE_LOADER_FORECAST = 'HIDE_LOADER_FORECAST',\r\n  SHOW_LOADER_PAST = 'SHOW_LOADER_PAST',\r\n  HIDE_LOADER_PAST = 'HIDE_LOADER_PAST'\r\n};\r\n\r\n\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://api.openweathermap.org/data/2.5'\r\n})\r\n\r\nconst cancelToken = axios.CancelToken;\r\nexport const source = cancelToken.source();\r\n\r\nexport const isCancel = axios.isCancel;\r\n\r\n\r\n\r\n/* const instance = axios.create();\r\ninstance.CancelToken = axios.CancelToken;\r\ninstance.isCancel = axios.isCancel; */","import { LoaderStatus } from '../../types/app';\r\n\r\n\r\nexport function showLoaderForcast() {\r\n  return {\r\n    type: LoaderStatus.SHOW_LOADER_FORECAST\r\n  }\r\n}\r\n\r\nexport function hideLoaderForcast() {\r\n  return {\r\n    type: LoaderStatus.HIDE_LOADER_FORECAST\r\n  }\r\n}\r\n\r\nexport function showLoaderPast() {\r\n  return {\r\n    type: LoaderStatus.SHOW_LOADER_PAST\r\n  }\r\n}\r\n\r\nexport function hideLoaderPast() {\r\n  return {\r\n    type: LoaderStatus.HIDE_LOADER_PAST\r\n  }\r\n}","import axios from '../../axios/axios';\r\nimport { source } from '../../axios/axios';\r\nimport { isCancel } from '../../axios/axios';\r\nimport { Days7Forecast, IForecastData } from '../../types/forecastData';\r\nimport { IPastData, PastData } from '../../types/pastData';\r\nimport {\r\n  hideLoaderPast, showLoaderForcast,\r\n  showLoaderPast, hideLoaderForcast,\r\n} from './app';\r\n\r\n\r\nconst API_KEY = process.env.REACT_APP_API_REY;\r\n\r\nexport function fetch7DayForecast(lat, lon, part = '') {\r\n\r\n  return async dispatch => {\r\n    try {\r\n\r\n      dispatch(showLoaderForcast());\r\n\r\n      const url = `/onecall?lat=${lat}&lon=${lon}&exclude=${part}&units=metric&appid=${API_KEY}`;\r\n      const response = await axios.get<IForecastData[]>(url, { cancelToken: source.token });\r\n\r\n      dispatch({\r\n        type: Days7Forecast.FETCH_7DAYSFORECAST,\r\n        data: response.data\r\n      });\r\n\r\n      dispatch(hideLoaderForcast());\r\n\r\n    } catch (thrown:any) {\r\n      if (isCancel(thrown)) {\r\n        console.log('Request canceled', thrown.message);\r\n        /* dispatch(showAlert('Что-то пошло не так...', 'danger')) */\r\n        dispatch(hideLoaderForcast());\r\n      } else {\r\n        /* dispatch(showAlert('Что-то пошло не так...', 'danger')) */\r\n        dispatch(hideLoaderForcast());\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport function fetchPastForecast() {\r\n  /* return async (dispatch: Dispatch<IPastDataAction>, getState) => { */\r\n  return async (dispatch, getState) => {\r\n\r\n    const { pastCardInfo } = getState();\r\n    \r\n    let unixDate = pastCardInfo.unixDate;\r\n    let cityLocation = pastCardInfo.cityLocation;\r\n\r\n    if (unixDate === null || cityLocation === null) return;\r\n    \r\n    const { lat, lon } = cityLocation;\r\n    \r\n    try {\r\n      dispatch(showLoaderPast());\r\n\r\n      const url = `/onecall/timemachine?lat=${lat}&lon=${lon}&dt=${unixDate}&units=metric&appid=${API_KEY}`;\r\n      const response = await axios.get<IPastData>(url, { cancelToken: source.token });\r\n\r\n      dispatch({\r\n        type: PastData.FETCH_PAST_FORECAST,\r\n        data: response.data\r\n      });\r\n\r\n      dispatch(hideLoaderPast());\r\n\r\n    } catch (thrown:any) {\r\n      if (isCancel(thrown)) {\r\n        console.log('Request canceled', thrown.message);\r\n        /* dispatch(showAlert('Что-то пошло не так...', 'danger')) */\r\n        dispatch(hideLoaderPast());\r\n      } else {\r\n        /* dispatch(showAlert('Что-то пошло не так...', 'danger')) */\r\n        dispatch(hideLoaderPast());\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n\r\n","interface ICities {\r\n  name: string,\r\n  lat?: string,\r\n  disabled?: boolean,\r\n  hidden?:boolean\r\n};\r\n\r\nexport const CITIES: ICities[] = [\r\n  { name: 'Select city', disabled: true, hidden: true },\r\n  { name: 'Самара', lat: '53.195873' },\r\n  { name: 'Тольятти', lat: '53.507836' },\r\n  { name: 'Саратов', lat: '51.533557' },\r\n  { name: 'Казань', lat: '55.796127' },\r\n  { name: 'Краснодар', lat: '45.035470' },\r\n];","import './select-city.scss';\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetch7DayForecast } from '../../store/actions/getWeather';\r\nimport { CITIES } from '../../cities/cities';\r\n\r\n\r\ntype SelectLat = '53.195873' | '53.507836' |\r\n                      '51.533557' | '55.796127' | '45.035470'\r\n\r\nconst SelectCity = ({ data }) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = e => { \r\n    let lon: string = '';\r\n    let lat:SelectLat = e.target.value;\r\n    switch (lat) {\r\n     case '53.195873': // Самара\r\n      return dispatch(fetch7DayForecast(lat, lon = '50.100193'));\r\n     case '53.507836': // Тольятти\r\n      return dispatch(fetch7DayForecast(lat, lon = '49.420393'));\r\n     case '51.533557': // Саратов\r\n      return dispatch(fetch7DayForecast(lat, lon = '46.034257'));\r\n     case '55.796127': // Казань\r\n      return dispatch(fetch7DayForecast(lat, lon = '49.106405'));  \r\n     case '45.035470': // Краснодар\r\n      return dispatch(fetch7DayForecast(lat, lon = '38.975313'));\r\n     default: return;\r\n    }\r\n  }\r\n  \r\n  let isEmpty = Object.keys(data);\r\n  const cls = [\r\n    'select-future__city',\r\n    isEmpty.length ? 'select-future__city--active' : null,\r\n  ];\r\n\r\n  return (\r\n    <form className=\"card-forcast__select select-future\">\r\n      <select \r\n        onChange={ handleChange }\r\n        className={ cls.join(' ') }\r\n        defaultValue=\"Select city\"\r\n      >\r\n      {\r\n        CITIES.map(option => (\r\n          <option\r\n            key={ option.name }\r\n            value={ option.lat }\r\n            disabled={ option.disabled }\r\n            hidden={ option.hidden }\r\n          >\r\n            { option.name }\r\n          </option>\r\n        ))  \r\n      }\r\n      </select>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default SelectCity;","import React from 'react';\r\nimport './Loader.scss';\r\n\r\nconst Loader: React.FC = () => (\r\n  \r\n    <div className='loader-centre'>\r\n      <div className=\"lds-roller\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n)\r\n\r\nexport default Loader;","\r\nexport function getDate(unixTimestamp:number):string {\r\n\r\n  const date = new Date(unixTimestamp * 1000);\r\n\r\n  let dd: number | string = date.getDate();\r\n  \r\n  if (dd < 10) { dd = '0' + dd };\r\n\r\n  const yyyy: number = date.getFullYear();\r\n  \r\n  type Date = 'jan' | 'feb' | 'mar' |\r\n              'apr' | 'may' | 'jun' |\r\n              'jul' | 'aug' | 'sep' |\r\n              'oct' | 'nov' | 'dec' | undefined;\r\n\r\n  function toStrMonth():Date {\r\n    const mm:number = date.getMonth() + 1;\r\n    switch (mm) {\r\n      case 1: return 'jan';\r\n      case 2: return 'feb';\r\n      case 3: return 'mar';\r\n      case 4: return 'apr';\r\n      case 5: return 'may';\r\n      case 6: return 'jun';\r\n      case 7: return 'jul';\r\n      case 8: return 'aug';\r\n      case 9: return 'sep';\r\n      case 10: return 'oct';\r\n      case 11: return 'nov';\r\n      case 12: return 'dec';\r\n      default: return;\r\n   }\r\n  }\r\n\r\n  const mm:Date = toStrMonth();\r\n  const currentDate:string = dd + ' ' + mm + ' ' + yyyy;\r\n\r\n  return currentDate\r\n}","export interface IPastCardState {\r\n  unixDate: null | number,\r\n  cityLocation: null | string,\r\n};\r\n\r\nexport enum PastCard {\r\n  GET_DATE = 'GET_DATE',\r\n  GET_LOCATION = 'GET_LOCATION'\r\n};\r\n\r\nexport type PastCardAction = {\r\n  type: string,\r\n  unixDate: number,\r\n  cityLocation:string\r\n};","import { FC } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { getDate } from '../../utils/getDate';\r\nimport './unit-forecast.scss';\r\nimport { IForecastData } from '../../types/forecastData';\r\n\r\ninterface IunitProps {\r\n  data: IForecastData[]\r\n};\r\n\r\ninterface IRootState {\r\n  forecastData: {\r\n    daily: IForecastData[]\r\n  }\r\n};\r\n\r\nconst UnitForecast: FC<IunitProps> = props => {\r\n  \r\n  let data = useSelector((state: IRootState) => state.forecastData);\r\n  let forecastData;\r\n\r\n  if (window.screen.width > 768 && !!props.data.length) {\r\n      \r\n    forecastData = props.data;\r\n  } else if (window.screen.width < 768) {\r\n    \r\n     forecastData = data.daily;\r\n  } else {\r\n    \r\n      const cards = [0, 1, 2];\r\n      forecastData = cards.map(card => {\r\n        return data.daily[card]\r\n      }); \r\n    };\r\n  \r\n  return forecastData.map(day => {\r\n \r\n    const date:string = getDate(day.dt);\r\n    const temp:number = Math.round(day.temp.eve);\r\n    return (\r\n        <div \r\n        key={ day.dt }\r\n        className=\"unit-forecast\"\r\n        >\r\n          <p className=\"unit-forecast__date\">\r\n            { date }\r\n          </p>\r\n        {\r\n          day.weather.map(result => {\r\n\r\n            let url = 'http://openweathermap.org/img/wn/' + result.icon + '@2x.png';\r\n            return (\r\n              <img\r\n                key={ result.id }\r\n                className=\"unit-forecast__image\"\r\n                src={ url }\r\n                alt={ result.description }\r\n              />\r\n            )\r\n          })\r\n        }\r\n          <div className=\"unit-forecast__tmp\">\r\n            <span className=\"unit-forecast__num\">\r\n              { temp >= 0 ? `+${temp}` : temp }\r\n            </span>\r\n            <span>°</span>\r\n          </div>\r\n        </div>\r\n    )\r\n  })\r\n}\r\n\r\nexport default UnitForecast;","export default __webpack_public_path__ + \"static/media/placeholder.1a7907bc.svg\";","import React from 'react';\r\nimport image from '../../assets/images/placeholder.svg';\r\nimport './placeholder.scss';\r\n\r\nconst Placeholder: React.FC = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <img\r\n       className=\"card-forcast__placeholder\"\r\n       src={ image }\r\n       alt=\"картинка вместо погоды\"\r\n      />\r\n      <p className=\"card-forcast__text\">\r\n        Fill in all the fields and\r\n        the weather will be displayed\r\n      </p>    \r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Placeholder;","import React, { useRef, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './card-forcast.scss';\r\nimport SelectCity from '../select-city/SelectCity';\r\nimport Loader from '../loader/Loader';\r\nimport UnitForecast from '../unit-forecast/UnitForecast';\r\nimport Placeholder from '../placeholder/Placeholder';\r\nimport { IForecastData } from '../../types/forecastData';\r\nimport { IStateLoading } from '../../types/app';\r\n\r\n\r\nconst CardForcast: React.FC = () => {\r\n\r\n  interface IApp {\r\n    app: IStateLoading\r\n  };\r\n\r\n  const loading = useSelector((state:IApp) => state.app.loadingForecast);\r\n  const data = useSelector((state: any) => state.forecastData);\r\n\r\n  const cardsToShow = useRef<number[]>([0, 1, 2]);\r\n  const [result, setResult] = useState<IForecastData[]>([]);\r\n\r\n  const isInctiveNext:boolean = cardsToShow.current.includes(7);\r\n  const isAIntivePrev:boolean = cardsToShow.current.includes(0);\r\n\r\n  const handleNext = () => {\r\n    if (isInctiveNext) return;\r\n    \r\n    const nextCards = cardsToShow.current.map(card => {\r\n      return card + 1\r\n    });\r\n    cardsToShow.current = nextCards;\r\n    \r\n    const result: any = nextCards.map(card => {\r\n      return data.daily[card]\r\n    });\r\n\r\n    setResult(prev => result);\r\n  };\r\n\r\n  const handlePrev = () => {\r\n    if (isAIntivePrev) return;\r\n    \r\n    const prevCards = cardsToShow.current.map(card => {\r\n      return card - 1\r\n    });\r\n    cardsToShow.current = prevCards;\r\n\r\n    const result: any = prevCards.map(card => {\r\n      return data.daily[card]\r\n    });\r\n\r\n    setResult(prev => result);\r\n  };\r\n\r\n  const clsPrev = [\r\n    'arrow arrow-prev',\r\n    isAIntivePrev ? 'arrow--disabled' : '',\r\n  ];\r\n\r\n  const clsNext = [\r\n    'arrow arrow-next',\r\n    isInctiveNext ? 'arrow--disabled' : '',\r\n  ];\r\n  \r\n  return (\r\n    \r\n    <article className=\"card-forcast card-forcast--future\">\r\n      <h3 className=\"card-forcast__title\">\r\n        7 Days Forecast\r\n      </h3>\r\n      <SelectCity data={ data } />\r\n      {\r\n        loading ? <Loader /> :\r\n        data.hourly ?\r\n            <div className=\"card-forcast__wrapper\">\r\n              <div className=\"card-forcast__overflow\">\r\n                <UnitForecast data={ result } />\r\n                <div\r\n                  className={ clsPrev.join(' ').trim() }\r\n                  onClick={ handlePrev }\r\n                ></div>\r\n                <div\r\n                  className={ clsNext.join(' ').trim() }\r\n                  onClick={ handleNext }\r\n                ></div>\r\n              </div>\r\n            </div>\r\n            : <Placeholder />\r\n      }\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default CardForcast;","import { PastCard } from '../../types/pastCard';\r\nimport { fetchPastForecast } from './getWeather';\r\n\r\n\r\nexport function getLocation(lat: string, lon: string) {\r\n\r\n  return dispatch => {\r\n    dispatch({\r\n      type: PastCard.GET_LOCATION,\r\n      cityLocation: { lat, lon }\r\n    });\r\n    dispatch(fetchPastForecast());\r\n }\r\n}","import { TypedUseSelectorHook, useSelector } from 'react-redux';\r\nimport { RootState } from '../store/reducers/rootReducer';\r\n\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;","import './select-city-past.scss';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getLocation } from '../../store/actions/getLocation';\r\nimport { CITIES } from '../../cities/cities';\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\n\r\n\r\ntype SelectLat = '53.195873' | '53.507836' |\r\n                      '51.533557' | '55.796127' | '45.035470'\r\n\r\nconst SelectCityPast:React.FC = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const data = useTypedSelector((state) => state.pastCardInfo.cityLocation);\r\n\r\n  const handleChange = e => { \r\n    let lon: string = '';\r\n    let lat:SelectLat = e.target.value;\r\n    switch (lat) {\r\n     case '53.195873': // Самара\r\n        return dispatch(getLocation(lat, lon = '50.100193'));\r\n     case '53.507836': // Тольятти\r\n        return dispatch(getLocation(lat, lon = '49.420393'));\r\n     case '51.533557': // Саратов\r\n        return dispatch(getLocation(lat, lon = '46.034257'));\r\n     case '55.796127': // Казань\r\n        return dispatch(getLocation(lat, lon = '49.106405'));\r\n     case '45.035470': // Краснодар\r\n        return dispatch(getLocation(lat, lon = '38.975313'));\r\n     default: return;\r\n    }\r\n  }\r\n\r\n  const cls = [\r\n    'select-past__city',\r\n    data === null ? null : 'select-past__city--active',\r\n  ];\r\n\r\n  return (\r\n      <select\r\n        onChange={ handleChange }\r\n        className={ cls.join(' ').trim() }\r\n        defaultValue=\"Select city\"\r\n      >\r\n      {\r\n        CITIES.map(option => (\r\n          <option\r\n            key={option.name}\r\n            value={option.lat}\r\n            disabled={option.disabled}\r\n            hidden={option.hidden}\r\n          >\r\n            {option.name}\r\n          </option>\r\n        ))  \r\n      }\r\n      </select>\r\n  )\r\n}\r\n\r\nexport default SelectCityPast;","const today = new Date().getTime()\r\nconst days = 86400000 //number of milliseconds in a day\r\nconst fiveDaysAgo:string = new Date(today - (5 * days)).toJSON().slice(0, 10)\r\n\r\nexport default fiveDaysAgo","import React, { useEffect, useRef } from 'react';\r\nimport './select-date.scss';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getDate } from '../../store/actions/getDate';\r\nimport { fetchPastForecast } from '../../store/actions/getWeather';\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\nimport fiveDaysAgo from '../../utils/to5DaysAgo';\r\n\r\n\r\nconst SelectDate:React.FC = () => {\r\n\r\n  const data = useTypedSelector((state) => state.pastCardInfo.unixDate);\r\n  \r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n  const wrapperRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n\r\n    const input:HTMLInputElement | null = inputRef.current;\r\n    const wrapper:HTMLDivElement | null = wrapperRef.current;\r\n\r\n    const addClass = () => {\r\n      wrapper!.classList.add('select-past__hide-placeholder');\r\n    }\r\n\r\n    const removeClass = () => {\r\n      wrapper!.classList.remove('select-past__hide-placeholder');\r\n    }\r\n\r\n    input!.addEventListener('focus', addClass);\r\n\r\n    if (!data) {\r\n      input!.addEventListener('blur', removeClass);\r\n    }\r\n    \r\n    return () => {\r\n      input!.removeEventListener('focus', addClass);\r\n      input!.removeEventListener('blur', removeClass);\r\n    }\r\n\r\n  }, [data]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = e => {\r\n\r\n    const date = e.target.value;\r\n    const unixDate = new Date(`${date}`).getTime() / 1000;\r\n\r\n    if (unixDate > Date.now() / 1000) return;\r\n\r\n    dispatch(getDate(unixDate));\r\n    dispatch(fetchPastForecast());\r\n  };\r\n\r\n  const cls = [\r\n    'select-past__date',\r\n    data === null ? null : 'select-past__date--active',\r\n  ];\r\n\r\n  return (\r\n    <div\r\n      className=\"select-past__wrapper\"\r\n      ref={ wrapperRef }\r\n    >\r\n      <input\r\n        className={ cls.join(' ').trim() }\r\n        type=\"date\"\r\n        ref={ inputRef }\r\n        onChange={handleChange}\r\n        min={fiveDaysAgo}\r\n        max={new Date().toJSON().slice(0,10)}\r\n      />\r\n      <p className=\"select-past__placeholder\">\r\n        Select date\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SelectDate;","import { PastCard } from '../../types/pastCard';\r\n\r\n\r\nexport function getDate(unixDate: number) {\r\n  return {\r\n    type: PastCard.GET_DATE,\r\n    unixDate\r\n }\r\n}","import React from 'react';\r\nimport './unit-past.scss';\r\nimport { getDate } from '../../utils/getDate';\r\nimport { IPastData } from '../../types/pastData';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\ninterface IPastState {\r\n  pastData:IPastData\r\n};\r\n\r\nconst UnitPast:React.FC = () => {\r\n  \r\n  const data = useSelector((state: IPastState) => state.pastData);\r\n\r\n  const hourResult = data.hourly[11]; // 11:00\r\n\r\n  const date:string = getDate(data.current.dt);\r\n  const temp:number = Math.round(hourResult.temp);\r\n\r\n  return (\r\n    <div className=\"card-forcast__unit unit-past\">\r\n      <p className=\"unit-past__date\">\r\n        { date }\r\n      </p>\r\n      {\r\n        hourResult.weather.map(result => {\r\n\r\n          let url = 'http://openweathermap.org/img/wn/' + result.icon + '@2x.png';\r\n          return (\r\n            <img\r\n              key={ result.id }\r\n              className=\"unit-past__image\"\r\n              src={ url }\r\n              alt={ result.description }\r\n            />\r\n          )\r\n        })\r\n      }\r\n      <div className=\"unit-past__tmp\">\r\n        <span className=\"unit-past__num\">\r\n        { temp >= 0 ? `+${temp}` : temp }\r\n        </span>\r\n        <span>°</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UnitPast;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Loader from '../loader/Loader';\r\nimport SelectCityPast from '../select-city-past/SelectCityPast';\r\nimport SelectDate from '../select-date/SelectDate';\r\nimport UnitPast from '../unit-past/UnitPast';\r\nimport Placeholder from '../placeholder/Placeholder'\r\nimport { IStateLoading } from '../../types/app';\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\nimport { IPastData } from '../../types/pastData';\r\n\r\n\r\ninterface ILoading {\r\n  app:IStateLoading\r\n};\r\n\r\ninterface IPastState {\r\n  pastData: IPastData\r\n};\r\n\r\nconst CardPast: React.FC = () => {\r\n\r\n  const loading = useTypedSelector((state:ILoading) => state.app.loadingPast);\r\n  const data = useSelector((state:IPastState) => state.pastData);\r\n\r\n  return (\r\n    <article className=\"card-forcast card-forcast--past\">\r\n      <h3 className=\"card-forcast__title card-forcast__title--left\">\r\n        Forecast for a Date in the Past\r\n      </h3>\r\n      <form className=\"card-forcast__select select-past\">\r\n        <SelectCityPast />\r\n        <SelectDate />\r\n      </form>\r\n      {\r\n        loading ? <Loader /> :\r\n        data.hourly ?\r\n        <UnitPast /> : <Placeholder />\r\n      }\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default CardPast;","import React from 'react';\r\nimport './header.scss';\r\n\r\nconst Header: React.FC = () => (\r\n  \r\n    <header className=\"main-title\">\r\n     <h2>\r\n       Weather\r\n     </h2>\r\n     <h2>\r\n      forecast \r\n     </h2>\r\n   </header>\r\n)\r\n\r\nexport default Header;","import React from 'react';\r\nimport './footer.scss';\r\n\r\nconst Footer: React.FC = () => (\r\n  <footer className=\"footer\">\r\n   <p>C ЛЮБОВЬЮ ОТ MERCURY DEVELOPMENT</p>\r\n  </footer> \r\n)\r\n\r\nexport default Footer;\r\n\r\n","import React from 'react';\r\nimport CardForcast from './components/card-forcast/CardForcast';\r\nimport CardPast from './components/card-past/CardPast';\r\nimport Title from './components/header/Header';\r\nimport './app.scss';\r\nimport Footer from './components/footer/Footer';\r\n\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <Title />\r\n      <main className=\"container\">\r\n       <CardForcast />\r\n       <CardPast />\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {\r\n  IStateLoading,\r\n  LoaderStatus, AppAction\r\n} from '../../types/app';\r\n\r\n\r\nlet initialState:IStateLoading = {\r\n  loadingForecast: false,\r\n  loadingPast: false,\r\n}\r\n\r\nconst appReducer = (\r\n  state = initialState, action: AppAction\r\n): IStateLoading => {\r\n  switch (action.type) {\r\n    case LoaderStatus.SHOW_LOADER_FORECAST:\r\n      return { ...state, loadingForecast: true }\r\n    case LoaderStatus.HIDE_LOADER_FORECAST:\r\n      return { ...state, loadingForecast: false }\r\n    case LoaderStatus.SHOW_LOADER_PAST:\r\n      return { ...state, loadingPast: true }\r\n    case LoaderStatus.HIDE_LOADER_PAST:\r\n      return { ...state, loadingPast: false }\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport default appReducer;","import {\r\n  Days7Forecast,\r\n  Days7ForecastAction\r\n} from '../../types/forecastData';\r\n\r\n\r\nlet initialState = {};\r\n\r\nconst forecastDataReducer = (\r\n  state = initialState, action: Days7ForecastAction) => {\r\n  switch (action.type) {\r\n    case Days7Forecast.FETCH_7DAYSFORECAST:\r\n      return action.data;\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default forecastDataReducer;","import { PastDataAction, PastData } from '../../types/pastData';\r\n\r\n/* let initialState = {\r\n  current: { dt: null },\r\n  hourly: [\r\n    {\r\n      temp: null,\r\n      weather: []\r\n   }\r\n  ],\r\n}; */\r\n\r\nlet initialState = {};\r\n\r\nconst pastDataReducer = (\r\n  state = initialState, action: PastDataAction) => {\r\n  switch (action.type) {\r\n    case PastData.FETCH_PAST_FORECAST:\r\n      return action.data;\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default pastDataReducer;","import {\r\n  IPastCardState,\r\n  PastCard,\r\n  PastCardAction\r\n} from '../../types/pastCard';\r\n\r\n\r\nlet initialState: IPastCardState = {\r\n  unixDate: null,\r\n  cityLocation: null,\r\n};\r\n\r\nconst pastCardReducer = (\r\n  state = initialState, action: PastCardAction\r\n): IPastCardState => {\r\n  switch (action.type) {\r\n    case PastCard.GET_DATE:\r\n      return { ...state, unixDate: action.unixDate }\r\n    case PastCard.GET_LOCATION:\r\n      return { ...state, cityLocation: action.cityLocation }\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default pastCardReducer;","import { combineReducers } from 'redux';\r\nimport appReducer from './app';\r\nimport forecastDataReducer from './forecastData';\r\nimport pastDataReducer from './pastData';\r\nimport pastCardReducer from './pastCard';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  app: appReducer,\r\n  forecastData: forecastDataReducer,\r\n  pastData: pastDataReducer,\r\n  pastCardInfo: pastCardReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './store/reducers/rootReducer';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}