{"version":3,"sources":["types/app.ts","types/pastCard.ts","cities/cities.ts","store/actions/app.ts","store/actions/getDate.ts","types/forecastData.ts","types/pastData.ts","axios/axios.ts","store/actions/getWeather.ts","store/actions/getLocation.ts","store/actions/index.ts","hooks/useActions.ts","components/select-city/SelectCity.tsx","components/loader/Loader.tsx","utils/getDate.ts","components/unit-forecast/UnitForecast.tsx","assets/images/placeholder.svg","components/placeholder/Placeholder.tsx","components/card-forcast/CardForcast.tsx","hooks/useTypedSelector.ts","components/select-city-past/selectCityPast.tsx","utils/to5DaysAgo.ts","components/select-date/SelectDate.tsx","components/unit-past/UnitPast.tsx","components/card-past/CardPast.tsx","components/header/Header.tsx","components/footer/Footer.tsx","App.tsx","store/reducers/app.ts","store/reducers/forecastData.ts","store/reducers/pastData.ts","store/reducers/pastCard.ts","store/reducers/rootReducer.ts","reportWebVitals.ts","index.tsx"],"names":["LoaderStatus","PastCard","CITIES","name","disabled","hidden","lat","showLoaderForcast","type","SHOW_LOADER_FORECAST","hideLoaderForcast","HIDE_LOADER_FORECAST","showLoaderPast","SHOW_LOADER_PAST","hideLoaderPast","HIDE_LOADER_PAST","getDate","unixDate","GET_DATE","Days7Forecast","PastData","axios","create","baseURL","source","CancelToken","isCancel","API_KEY","process","fetch7DayForecast","lon","part","dispatch","a","url","get","cancelToken","token","response","FETCH_7DAYSFORECAST","data","console","log","message","fetchPastForecast","getState","pastCardInfo","cityLocation","FETCH_PAST_FORECAST","getLocation","GET_LOCATION","app","getWeater","useActions","useDispatch","bindActionCreators","UserActions","SelectCity","forecast7DaysData","cls","Object","keys","length","className","onChange","e","latitude","target","value","join","defaultValue","map","option","Loader","unixTimestamp","date","Date","dd","yyyy","getFullYear","getMonth","toStrMonth","UnitForecast","props","forecastDataToShow","forecastData","useSelector","state","window","screen","width","currentShowCards","daily","card","day","dt","temp","Math","round","eve","weather","result","icon","src","alt","description","id","Placeholder","Fragment","image","CardForcast","loading7DaysForecast","cardsToShow","useRef","useState","setCurrentShowCards","isInctiveNext","current","includes","isAIntivePrev","clsPrev","clsNext","hourly","trim","onClick","prevCards","prev","nextCards","useTypedSelector","SelectCityPast","today","getTime","fiveDaysAgo","toJSON","slice","SelectDate","inputRef","wrapperRef","useEffect","input","wrapper","addClass","classList","add","removeClass","remove","addEventListener","removeEventListener","ref","now","min","max","UnitPast","pastDataForecast","pastData","hourResult","CardPast","loadingPastForecast","Header","Footer","App","initialState","appReducer","action","forecastDataReducer","pastDataReducer","pastCardReducer","rootReducer","combineReducers","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a583d5e2.chunk.js","sourcesContent":["\r\nexport interface IStateLoading {\r\n  loading7DaysForecast: boolean\r\n  loadingPastForecast: boolean\r\n};\r\n\r\ntype ShowLoaderForcast = {\r\n  type: LoaderStatus.SHOW_LOADER_FORECAST;\r\n};\r\n\r\ntype HideLoaderForcast = {\r\n  type: LoaderStatus.HIDE_LOADER_FORECAST;\r\n};\r\n\r\ntype ShowLoaderPast = {\r\n  type: LoaderStatus.SHOW_LOADER_PAST;\r\n};\r\n\r\ntype HideLoaderPast = {\r\n  type: LoaderStatus.HIDE_LOADER_PAST;\r\n};\r\n\r\nexport type AppAction = ShowLoaderForcast | HideLoaderForcast |\r\n                  ShowLoaderPast | HideLoaderPast\r\n\r\nexport enum LoaderStatus {\r\n  SHOW_LOADER_FORECAST = 'SHOW_LOADER_FORECAST',\r\n  HIDE_LOADER_FORECAST = 'HIDE_LOADER_FORECAST',\r\n  SHOW_LOADER_PAST = 'SHOW_LOADER_PAST',\r\n  HIDE_LOADER_PAST = 'HIDE_LOADER_PAST'\r\n};\r\n\r\n\r\n","export interface IPastCardState {\r\n  unixDate: null | number,\r\n  cityLocation: null | string,\r\n};\r\n\r\nexport enum PastCard {\r\n  GET_DATE = 'GET_DATE',\r\n  GET_LOCATION = 'GET_LOCATION'\r\n};\r\n\r\nexport type PastCardAction = {\r\n  type: string,\r\n  unixDate: number,\r\n  cityLocation:string\r\n};","interface ICities {\r\n  name: string,\r\n  lat?: string,\r\n  disabled?: boolean,\r\n  hidden?:boolean\r\n};\r\n\r\nexport const CITIES: ICities[] = [\r\n  { name: 'Select city', disabled: true, hidden: true },\r\n  { name: 'Самара', lat: '53.195873' },\r\n  { name: 'Тольятти', lat: '53.507836' },\r\n  { name: 'Саратов', lat: '51.533557' },\r\n  { name: 'Казань', lat: '55.796127' },\r\n  { name: 'Краснодар', lat: '45.035470' },\r\n];","import { LoaderStatus } from '../../types/app';\r\n\r\n\r\nexport function showLoaderForcast() {\r\n  return {\r\n    type: LoaderStatus.SHOW_LOADER_FORECAST\r\n  }\r\n}\r\n\r\nexport function hideLoaderForcast() {\r\n  return {\r\n    type: LoaderStatus.HIDE_LOADER_FORECAST\r\n  }\r\n}\r\n\r\nexport function showLoaderPast() {\r\n  return {\r\n    type: LoaderStatus.SHOW_LOADER_PAST\r\n  }\r\n}\r\n\r\nexport function hideLoaderPast() {\r\n  return {\r\n    type: LoaderStatus.HIDE_LOADER_PAST\r\n  }\r\n}","import { PastCard } from '../../types/pastCard';\r\n\r\n\r\nexport function getDate(unixDate: number) {\r\n  return {\r\n    type: PastCard.GET_DATE,\r\n    unixDate\r\n }\r\n}","interface IWeatherData {\r\n  icon: string\r\n  id: number\r\n  description: string\r\n};\r\n\r\nexport interface IForecastData {\r\n  dt: number\r\n  temp: { eve: number }\r\n  weather: IWeatherData[]\r\n};\r\n\r\nexport enum Days7Forecast {\r\n  FETCH_7DAYSFORECAST = 'FETCH_7DAYSFORECAST'\r\n};\r\n\r\nexport type Days7ForecastAction = {\r\n  type: Days7Forecast.FETCH_7DAYSFORECAST,\r\n  data: IForecastData\r\n}\r\n\r\n","interface IWeather {\r\n  icon: string,\r\n  id: number,\r\n  description: string,\r\n};\r\n\r\ninterface IHourly {\r\n  temp: number\r\n  weather: IWeather[]\r\n};\r\n\r\n\r\nexport interface IPastData {\r\n  current: { dt: number }\r\n  hourly: IHourly[]\r\n};\r\n\r\nexport type PastDataAction = {\r\n  type: PastData.FETCH_PAST_FORECAST;\r\n  data: IPastData;\r\n};\r\n\r\nexport enum PastData {\r\n  FETCH_PAST_FORECAST = 'FETCH_PAST_FORECAST'\r\n};\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://api.openweathermap.org/data/2.5'\r\n})\r\n\r\nconst cancelToken = axios.CancelToken;\r\nexport const source = cancelToken.source();\r\n\r\nexport const isCancel = axios.isCancel;\r\n\r\n\r\n\r\n/* const instance = axios.create();\r\ninstance.CancelToken = axios.CancelToken;\r\ninstance.isCancel = axios.isCancel; */","import axios from '../../axios/axios';\r\nimport { source } from '../../axios/axios';\r\nimport { isCancel } from '../../axios/axios';\r\nimport { Days7Forecast, IForecastData } from '../../types/forecastData';\r\nimport { IPastData, PastData } from '../../types/pastData';\r\nimport {\r\n  hideLoaderPast, showLoaderForcast,\r\n  showLoaderPast, hideLoaderForcast,\r\n} from './app';\r\n\r\n\r\nconst API_KEY = process.env.REACT_APP_API_REY;\r\n\r\nexport function fetch7DayForecast(lat, lon, part = '') {\r\n\r\n  return async dispatch => {\r\n    try {\r\n\r\n      dispatch(showLoaderForcast());\r\n\r\n      const url = `/onecall?lat=${lat}&lon=${lon}&exclude=${part}&units=metric&appid=${API_KEY}`;\r\n      const response = await axios.get<IForecastData[]>(url, { cancelToken: source.token });\r\n\r\n      dispatch({\r\n        type: Days7Forecast.FETCH_7DAYSFORECAST,\r\n        data: response.data\r\n      });\r\n\r\n      dispatch(hideLoaderForcast());\r\n\r\n    } catch (thrown:any) {\r\n      if (isCancel(thrown)) {\r\n        console.log('Request canceled', thrown.message);\r\n        /* dispatch(showAlert('Что-то пошло не так...', 'danger')) */\r\n        dispatch(hideLoaderForcast());\r\n      } else {\r\n        /* dispatch(showAlert('Что-то пошло не так...', 'danger')) */\r\n        dispatch(hideLoaderForcast());\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport function fetchPastForecast() {\r\n  /* return async (dispatch: Dispatch<IPastDataAction>, getState) => { */\r\n  return async (dispatch, getState) => {\r\n\r\n    const { pastCardInfo } = getState();\r\n    \r\n    let unixDate = pastCardInfo.unixDate;\r\n    let cityLocation = pastCardInfo.cityLocation;\r\n\r\n    if (unixDate === null || cityLocation === null) return;\r\n    \r\n    const { lat, lon } = cityLocation;\r\n    \r\n    try {\r\n      dispatch(showLoaderPast());\r\n\r\n      const url = `/onecall/timemachine?lat=${lat}&lon=${lon}&dt=${unixDate}&units=metric&appid=${API_KEY}`;\r\n      const response = await axios.get<IPastData>(url, { cancelToken: source.token });\r\n\r\n      dispatch({\r\n        type: PastData.FETCH_PAST_FORECAST,\r\n        data: response.data\r\n      });\r\n\r\n      dispatch(hideLoaderPast());\r\n\r\n    } catch (thrown:any) {\r\n      if (isCancel(thrown)) {\r\n        console.log('Request canceled', thrown.message);\r\n        /* dispatch(showAlert('Что-то пошло не так...', 'danger')) */\r\n        dispatch(hideLoaderPast());\r\n      } else {\r\n        /* dispatch(showAlert('Что-то пошло не так...', 'danger')) */\r\n        dispatch(hideLoaderPast());\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n\r\n","import { PastCard } from '../../types/pastCard';\r\nimport { fetchPastForecast } from './getWeather';\r\n\r\n\r\nexport function getLocation(lat: string, lon: string) {\r\n\r\n  return dispatch => {\r\n    dispatch({\r\n      type: PastCard.GET_LOCATION,\r\n      cityLocation: { lat, lon }\r\n    });\r\n    dispatch(fetchPastForecast());\r\n }\r\n}","import * as app from './app';\r\nimport * as getDate from './getDate';\r\nimport * as getLocation from './getLocation';\r\nimport * as getWeater from './getWeather';\r\n\r\n\r\nexport default {\r\n  ...app,\r\n  ...getDate,\r\n  ...getLocation,\r\n  ...getWeater\r\n}","import { useDispatch } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport UserActions from '../store/actions';\r\n\r\n\r\nexport const useActions = () => {\r\n  const dispatch = useDispatch()\r\n  return bindActionCreators(UserActions, dispatch)\r\n}","import './select-city.scss';\r\nimport { CITIES } from '../../cities/cities';\r\nimport { useActions } from '../../hooks/useActions';\r\n\r\n\r\ntype SelectLat = '53.195873' | '53.507836' |\r\n  '51.533557' | '55.796127' | '45.035470';\r\n\r\ntype SelectLon = '50.100193' | '49.420393' |\r\n  '46.034257' | '49.106405' | '38.975313' | '';\r\n\r\nconst SelectCity = ({ forecast7DaysData }) => {\r\n\r\n  const { fetch7DayForecast } = useActions();\r\n\r\n  const setCityLocation = e => { \r\n    let longitude: SelectLon = '';\r\n    let latitude: SelectLat = e.target.value;\r\n    switch (latitude) {\r\n     case '53.195873': // Самара\r\n      return fetch7DayForecast(latitude, longitude = '50.100193');\r\n     case '53.507836': // Тольятти\r\n      return fetch7DayForecast(latitude, longitude = '49.420393');\r\n     case '51.533557': // Саратов\r\n      return fetch7DayForecast(latitude, longitude = '46.034257');\r\n     case '55.796127': // Казань\r\n      return fetch7DayForecast(latitude, longitude = '49.106405');  \r\n     case '45.035470': // Краснодар\r\n      return fetch7DayForecast(latitude, longitude = '38.975313');\r\n     default: return;\r\n    }\r\n  }\r\n  \r\n  let isEmptyForecast = Object.keys(forecast7DaysData);\r\n  const cls = [\r\n    'select-future__city',\r\n    isEmptyForecast.length ? 'select-future__city--active' : null,\r\n  ];\r\n\r\n  return (\r\n    <form className=\"card-forcast__select select-future\">\r\n      <select \r\n        onChange={ setCityLocation }\r\n        className={ cls.join(' ') }\r\n        defaultValue=\"Select city\"\r\n      >\r\n      {\r\n        CITIES.map(option => (\r\n          <option\r\n            key={ option.name }\r\n            value={ option.lat }\r\n            disabled={ option.disabled }\r\n            hidden={ option.hidden }\r\n          >\r\n            { option.name }\r\n          </option>\r\n        ))  \r\n      }\r\n      </select>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default SelectCity;","import React from 'react';\r\nimport './Loader.scss';\r\n\r\nconst Loader: React.FC = () => (\r\n  \r\n    <div className='loader-centre'>\r\n      <div className=\"lds-roller\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n)\r\n\r\nexport default Loader;","\r\nexport function getDate(unixTimestamp:number):string {\r\n\r\n  const date = new Date(unixTimestamp * 1000);\r\n\r\n  let dd: number | string = date.getDate();\r\n  \r\n  if (dd < 10) { dd = '0' + dd };\r\n\r\n  const yyyy: number = date.getFullYear();\r\n  \r\n  type Date = 'jan' | 'feb' | 'mar' |\r\n              'apr' | 'may' | 'jun' |\r\n              'jul' | 'aug' | 'sep' |\r\n              'oct' | 'nov' | 'dec' | undefined;\r\n\r\n  function toStrMonth():Date {\r\n    const mm:number = date.getMonth() + 1;\r\n    switch (mm) {\r\n      case 1: return 'jan';\r\n      case 2: return 'feb';\r\n      case 3: return 'mar';\r\n      case 4: return 'apr';\r\n      case 5: return 'may';\r\n      case 6: return 'jun';\r\n      case 7: return 'jul';\r\n      case 8: return 'aug';\r\n      case 9: return 'sep';\r\n      case 10: return 'oct';\r\n      case 11: return 'nov';\r\n      case 12: return 'dec';\r\n      default: return;\r\n   }\r\n  }\r\n\r\n  const mm:Date = toStrMonth();\r\n  const currentDate:string = dd + ' ' + mm + ' ' + yyyy;\r\n\r\n  return currentDate\r\n}","import { FC } from 'react';\r\nimport { getDate } from '../../utils/getDate';\r\nimport './unit-forecast.scss';\r\nimport { IForecastData } from '../../types/forecastData';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\ninterface IunitProps {\r\n  currentShowCards: IForecastData[]\r\n};\r\n\r\ninterface IRootState {\r\n  forecastData: {\r\n    daily: IForecastData[]\r\n  }\r\n};\r\n\r\nconst UnitForecast: FC<IunitProps> = props => {\r\n  \r\n  let forecastData = useSelector((state: IRootState) => state.forecastData);\r\n  let forecastDataToShow;\r\n\r\n  if (window.screen.width > 768 && !!props.currentShowCards.length) {\r\n      \r\n    forecastDataToShow = props.currentShowCards;\r\n  } else if (window.screen.width < 768) {\r\n    \r\n    forecastDataToShow = forecastData.daily;  \r\n  } else {\r\n    \r\n      const cards:number[] = [0, 1, 2];\r\n      forecastDataToShow = cards.map(card => {\r\n        return forecastData.daily[card]\r\n      }); \r\n    };\r\n  \r\n    return forecastDataToShow.map(day => {\r\n \r\n    const date:string = getDate(day.dt);\r\n    const temp:number = Math.round(day.temp.eve);\r\n    return (\r\n        <div \r\n        key={ day.dt }\r\n        className=\"unit-forecast\"\r\n        >\r\n          <p className=\"unit-forecast__date\">\r\n            { date }\r\n          </p>\r\n        {\r\n          day.weather.map(result => {\r\n\r\n            let url = 'http://openweathermap.org/img/wn/' + result.icon + '@2x.png';\r\n            return (\r\n              <img\r\n                key={ result.id }\r\n                className=\"unit-forecast__image\"\r\n                src={ url }\r\n                alt={ result.description }\r\n              />\r\n            )\r\n          })\r\n        }\r\n          <div className=\"unit-forecast__tmp\">\r\n            <span className=\"unit-forecast__num\">\r\n              { temp >= 0 ? `+${temp}` : temp }\r\n            </span>\r\n            <span>°</span>\r\n          </div>\r\n        </div>\r\n    )\r\n  })\r\n}\r\n\r\nexport default UnitForecast;","export default __webpack_public_path__ + \"static/media/placeholder.1a7907bc.svg\";","import React from 'react';\r\nimport image from '../../assets/images/placeholder.svg';\r\nimport './placeholder.scss';\r\n\r\nconst Placeholder: React.FC = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <img\r\n       className=\"card-forcast__placeholder\"\r\n       src={ image }\r\n       alt=\"картинка вместо погоды\"\r\n      />\r\n      <p className=\"card-forcast__text\">\r\n        Fill in all the fields and\r\n        the weather will be displayed\r\n      </p>    \r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Placeholder;","import React, { useRef, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './card-forcast.scss';\r\nimport SelectCity from '../select-city/SelectCity';\r\nimport Loader from '../loader/Loader';\r\nimport UnitForecast from '../unit-forecast/UnitForecast';\r\nimport Placeholder from '../placeholder/Placeholder';\r\nimport { IForecastData } from '../../types/forecastData';\r\nimport { IStateLoading } from '../../types/app';\r\n\r\n\r\nconst CardForcast: React.FC = () => {\r\n\r\n  interface IApp {\r\n    app: IStateLoading\r\n  };\r\n\r\n  const { loading7DaysForecast } = useSelector((state:IApp) => state.app);\r\n  const forecast7DaysData = useSelector((state: any) => state.forecastData);\r\n\r\n  const cardsToShow = useRef<number[]>([0, 1, 2]);\r\n  const [currentShowCards, setCurrentShowCards] = useState<IForecastData[]>([]);\r\n\r\n  const isInctiveNext:boolean = cardsToShow.current.includes(7);\r\n  const isAIntivePrev:boolean = cardsToShow.current.includes(0);\r\n\r\n  const setNextCards = () => {\r\n    if (isInctiveNext) return;\r\n    \r\n    const nextCards = cardsToShow.current.map(card => {\r\n      return card + 1\r\n    });\r\n    cardsToShow.current = nextCards;\r\n    \r\n    const currentShowCards: any = nextCards.map(card => {\r\n      return forecast7DaysData.daily[card]\r\n    });\r\n\r\n    setCurrentShowCards(prev => currentShowCards);\r\n  };\r\n\r\n  const setPrevCards = () => {\r\n    if (isAIntivePrev) return;\r\n    \r\n    const prevCards = cardsToShow.current.map(card => {\r\n      return card - 1\r\n    });\r\n    cardsToShow.current = prevCards;\r\n\r\n    const currentShowCards: any = prevCards.map(card => {\r\n      return forecast7DaysData.daily[card]\r\n    });\r\n\r\n    setCurrentShowCards(prev => currentShowCards);\r\n  };\r\n\r\n  const clsPrev = [\r\n    'arrow arrow-prev',\r\n    isAIntivePrev ? 'arrow--disabled' : '',\r\n  ];\r\n\r\n  const clsNext = [\r\n    'arrow arrow-next',\r\n    isInctiveNext ? 'arrow--disabled' : '',\r\n  ];\r\n  \r\n  return (\r\n    \r\n    <article className=\"card-forcast card-forcast--future\">\r\n      <h3 className=\"card-forcast__title\">\r\n        7 Days Forecast\r\n      </h3>\r\n      <SelectCity forecast7DaysData={ forecast7DaysData } />\r\n      {\r\n        loading7DaysForecast ? <Loader /> :\r\n        forecast7DaysData.hourly ?\r\n            <div className=\"card-forcast__wrapper\">\r\n              <div className=\"card-forcast__overflow\">\r\n              <UnitForecast currentShowCards={ currentShowCards } />\r\n                <button\r\n                  className={ clsPrev.join(' ').trim() }\r\n                  onClick={ setPrevCards }\r\n                />\r\n                <button\r\n                  className={ clsNext.join(' ').trim() }\r\n                  onClick={ setNextCards }\r\n                />\r\n              </div>\r\n            </div>\r\n            : <Placeholder />\r\n      }\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default CardForcast;","import { TypedUseSelectorHook, useSelector } from 'react-redux';\r\nimport { RootState } from '../store/reducers/rootReducer';\r\n\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;","import './select-city-past.scss';\r\nimport { CITIES } from '../../cities/cities';\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\nimport { useActions } from '../../hooks/useActions';\r\n\r\n\r\ntype SelectLat = '53.195873' | '53.507836' |\r\n  '51.533557' | '55.796127' | '45.035470';\r\n                      \r\ntype SelectLon = '50.100193' | '49.420393' |\r\n  '46.034257' | '49.106405' | '38.975313' | '';\r\n\r\nconst SelectCityPast:React.FC = () => {\r\n\r\n  const { getLocation } = useActions();\r\n  const cityLocation = useTypedSelector((state) => state.pastCardInfo.cityLocation);\r\n\r\n  const setCityLocation = e => { \r\n    let longitude: SelectLon = '';\r\n    let latitude: SelectLat = e.target.value;\r\n    switch (latitude) {\r\n     case '53.195873': // Самара\r\n        return getLocation(latitude, longitude = '50.100193');\r\n     case '53.507836': // Тольятти\r\n        return getLocation(latitude, longitude = '49.420393');\r\n     case '51.533557': // Саратов\r\n        return getLocation(latitude, longitude = '46.034257');\r\n     case '55.796127': // Казань\r\n        return getLocation(latitude, longitude = '49.106405');\r\n     case '45.035470': // Краснодар\r\n        return getLocation(latitude, longitude = '38.975313');\r\n     default: return;\r\n    }\r\n  }\r\n\r\n  const cls = [\r\n    'select-past__city',\r\n    cityLocation === null ? null : 'select-past__city--active',\r\n  ];\r\n\r\n  return (\r\n      <select\r\n        onChange={ setCityLocation }\r\n        className={ cls.join(' ').trim() }\r\n        defaultValue=\"Select city\"\r\n      >\r\n      {\r\n        CITIES.map(option => (\r\n          <option\r\n            key={option.name}\r\n            value={option.lat}\r\n            disabled={option.disabled}\r\n            hidden={option.hidden}\r\n          >\r\n            {option.name}\r\n          </option>\r\n        ))  \r\n      }\r\n      </select>\r\n  )\r\n}\r\n\r\nexport default SelectCityPast;","const today = new Date().getTime()\r\nconst days = 86400000 //number of milliseconds in a day\r\nconst fiveDaysAgo:string = new Date(today - (5 * days)).toJSON().slice(0, 10)\r\n\r\nexport default fiveDaysAgo","import React, { useEffect, useRef } from 'react';\r\nimport './select-date.scss';\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\nimport fiveDaysAgo from '../../utils/to5DaysAgo';\r\nimport { useActions } from '../../hooks/useActions';\r\n\r\n\r\nconst SelectDate:React.FC = () => {\r\n\r\n  const { unixDate } = useTypedSelector((state) => state.pastCardInfo);\r\n  \r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n  const wrapperRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n\r\n    const input:HTMLInputElement | null = inputRef.current;\r\n    const wrapper:HTMLDivElement | null = wrapperRef.current;\r\n\r\n    const addClass = () => {\r\n      wrapper!.classList.add('select-past__hide-placeholder');\r\n    }\r\n\r\n    const removeClass = () => {\r\n      wrapper!.classList.remove('select-past__hide-placeholder');\r\n    }\r\n\r\n    input!.addEventListener('focus', addClass);\r\n\r\n    if (!unixDate) {\r\n      input!.addEventListener('blur', removeClass);\r\n    }\r\n    \r\n    return () => {\r\n      input!.removeEventListener('focus', addClass);\r\n      input!.removeEventListener('blur', removeClass);\r\n    }\r\n\r\n  }, [unixDate]);\r\n\r\n  const { getDate, fetchPastForecast } = useActions();\r\n\r\n  const setDate = (e:React.ChangeEvent<HTMLInputElement>) => {\r\n\r\n    const date = e.target.value;\r\n    const unixDate = new Date(`${date}`).getTime() / 1000;\r\n\r\n    if (unixDate > Date.now() / 1000) return;\r\n\r\n    getDate(unixDate);\r\n    fetchPastForecast();\r\n  };\r\n\r\n  const cls = [\r\n    'select-past__date',\r\n    unixDate === null ? null : 'select-past__date--active',\r\n  ];\r\n\r\n  return (\r\n    <div\r\n      className=\"select-past__wrapper\"\r\n      ref={ wrapperRef }\r\n    >\r\n      <input\r\n        className={ cls.join(' ').trim() }\r\n        type=\"date\"\r\n        ref={ inputRef }\r\n        onChange={setDate}\r\n        min={fiveDaysAgo}\r\n        max={new Date().toJSON().slice(0,10)}\r\n      />\r\n      <p className=\"select-past__placeholder\">\r\n        Select date\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SelectDate;","import React from 'react';\r\nimport './unit-past.scss';\r\nimport { getDate } from '../../utils/getDate';\r\nimport { IPastData } from '../../types/pastData';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\ninterface IPastState {\r\n  pastData:IPastData\r\n};\r\n\r\nconst UnitPast:React.FC = () => {\r\n  \r\n  const pastDataForecast = useSelector((state: IPastState) => state.pastData);\r\n\r\n  const hourResult = pastDataForecast.hourly[11]; // 11:00\r\n\r\n  const date:string = getDate(pastDataForecast.current.dt);\r\n  const temp:number = Math.round(hourResult.temp);\r\n\r\n  return (\r\n    <div className=\"card-forcast__unit unit-past\">\r\n      <p className=\"unit-past__date\">\r\n        { date }\r\n      </p>\r\n      {\r\n        hourResult.weather.map(result => {\r\n\r\n          let url = 'http://openweathermap.org/img/wn/' + result.icon + '@2x.png';\r\n          return (\r\n            <img\r\n              key={ result.id }\r\n              className=\"unit-past__image\"\r\n              src={ url }\r\n              alt={ result.description }\r\n            />\r\n          )\r\n        })\r\n      }\r\n      <div className=\"unit-past__tmp\">\r\n        <span className=\"unit-past__num\">\r\n        { temp >= 0 ? `+${temp}` : temp }\r\n        </span>\r\n        <span>°</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UnitPast;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Loader from '../loader/Loader';\r\nimport SelectCityPast from '../select-city-past/selectCityPast';\r\nimport SelectDate from '../select-date/SelectDate';\r\nimport UnitPast from '../unit-past/UnitPast';\r\nimport Placeholder from '../placeholder/Placeholder'\r\nimport { IStateLoading } from '../../types/app';\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\nimport { IPastData } from '../../types/pastData';\r\n\r\n\r\ninterface ILoading {\r\n  app:IStateLoading\r\n};\r\n\r\ninterface IPastState {\r\n  pastData: IPastData\r\n};\r\n\r\nconst CardPast: React.FC = () => {\r\n\r\n  const { loadingPastForecast } = useTypedSelector((state:ILoading) => state.app);\r\n  const pastDataForecast = useSelector((state:IPastState) => state.pastData);\r\n\r\n  return (\r\n    <article className=\"card-forcast card-forcast--past\">\r\n      <h3 className=\"card-forcast__title card-forcast__title--left\">\r\n        Forecast for a Date in the Past\r\n      </h3>\r\n      <form className=\"card-forcast__select select-past\">\r\n        <SelectCityPast />\r\n        <SelectDate />\r\n      </form>\r\n      {\r\n        loadingPastForecast ? <Loader /> :\r\n        pastDataForecast.hourly ?\r\n        <UnitPast /> : <Placeholder />\r\n      }\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default CardPast;","import React from 'react';\r\nimport './header.scss';\r\n\r\nconst Header: React.FC = () => (\r\n  \r\n    <header className=\"main-title\">\r\n     <h2>\r\n       Weather\r\n     </h2>\r\n     <h2>\r\n      forecast \r\n     </h2>\r\n   </header>\r\n)\r\n\r\nexport default Header;","import React from 'react';\r\nimport './footer.scss';\r\n\r\nconst Footer: React.FC = () => (\r\n  <footer className=\"footer\">\r\n   <p>C ЛЮБОВЬЮ ОТ MERCURY DEVELOPMENT</p>\r\n  </footer> \r\n)\r\n\r\nexport default Footer;\r\n\r\n","import React from 'react';\r\nimport CardForcast from './components/card-forcast/CardForcast';\r\nimport CardPast from './components/card-past/CardPast';\r\nimport Title from './components/header/Header';\r\nimport './app.scss';\r\nimport Footer from './components/footer/Footer';\r\n\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <Title />\r\n      <main className=\"container\">\r\n       <CardForcast />\r\n       <CardPast />\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {\r\n  IStateLoading,\r\n  LoaderStatus, AppAction\r\n} from '../../types/app';\r\n\r\n\r\nlet initialState:IStateLoading = {\r\n  loading7DaysForecast: false,\r\n  loadingPastForecast: false,\r\n}\r\n\r\nconst appReducer = (\r\n  state = initialState, action: AppAction\r\n): IStateLoading => {\r\n  switch (action.type) {\r\n    case LoaderStatus.SHOW_LOADER_FORECAST:\r\n      return { ...state, loading7DaysForecast: true }\r\n    case LoaderStatus.HIDE_LOADER_FORECAST:\r\n      return { ...state, loading7DaysForecast: false }\r\n    case LoaderStatus.SHOW_LOADER_PAST:\r\n      return { ...state, loadingPastForecast: true }\r\n    case LoaderStatus.HIDE_LOADER_PAST:\r\n      return { ...state, loadingPastForecast: false }\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport default appReducer;","import {\r\n  Days7Forecast,\r\n  Days7ForecastAction\r\n} from '../../types/forecastData';\r\n\r\n\r\nlet initialState = {};\r\n\r\nconst forecastDataReducer = (\r\n  state = initialState, action: Days7ForecastAction) => {\r\n  switch (action.type) {\r\n    case Days7Forecast.FETCH_7DAYSFORECAST:\r\n      return action.data;\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default forecastDataReducer;","import { PastDataAction, PastData } from '../../types/pastData';\r\n\r\n/* let initialState = {\r\n  current: { dt: null },\r\n  hourly: [\r\n    {\r\n      temp: null,\r\n      weather: []\r\n   }\r\n  ],\r\n}; */\r\n\r\nlet initialState = {};\r\n\r\nconst pastDataReducer = (\r\n  state = initialState, action: PastDataAction) => {\r\n  switch (action.type) {\r\n    case PastData.FETCH_PAST_FORECAST:\r\n      return action.data;\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default pastDataReducer;","import {\r\n  IPastCardState,\r\n  PastCard,\r\n  PastCardAction\r\n} from '../../types/pastCard';\r\n\r\n\r\nlet initialState: IPastCardState = {\r\n  unixDate: null,\r\n  cityLocation: null,\r\n};\r\n\r\nconst pastCardReducer = (\r\n  state = initialState, action: PastCardAction\r\n): IPastCardState => {\r\n  switch (action.type) {\r\n    case PastCard.GET_DATE:\r\n      return { ...state, unixDate: action.unixDate }\r\n    case PastCard.GET_LOCATION:\r\n      return { ...state, cityLocation: action.cityLocation }\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default pastCardReducer;","import { combineReducers } from 'redux';\r\nimport appReducer from './app';\r\nimport forecastDataReducer from './forecastData';\r\nimport pastDataReducer from './pastData';\r\nimport pastCardReducer from './pastCard';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  app: appReducer,\r\n  forecastData: forecastDataReducer,\r\n  pastData: pastDataReducer,\r\n  pastCardInfo: pastCardReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './store/reducers/rootReducer';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}