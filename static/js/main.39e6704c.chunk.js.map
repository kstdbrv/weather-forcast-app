{"version":3,"sources":["types/app.ts","types/pastCard.ts","cities/cities.ts","store/actions/app.ts","store/actions/getDate.ts","types/forecastData.ts","types/pastData.ts","axios/axios.ts","store/actions/getWeather.ts","store/actions/getLocation.ts","store/actions/index.ts","hooks/useActions.ts","utils/positionError.ts","components/select-city/SelectCity.tsx","components/loader/Loader.tsx","utils/getDate.ts","assets/images/offline-icon.svg","components/unit-forecast/UnitForecast.tsx","assets/images/placeholder.svg","components/placeholder/Placeholder.tsx","hooks/useTypedSelector.ts","components/card-forcast/CardForcast.tsx","components/select-city-past/selectCityPast.tsx","utils/to5DaysAgo.ts","utils/to1DayAgo.ts","components/select-date/SelectDate.tsx","components/unit-past/UnitPast.tsx","components/card-past/CardPast.tsx","components/header/Header.tsx","components/footer/Footer.tsx","App.tsx","store/reducers/app.ts","store/reducers/forecastData.ts","store/reducers/pastData.ts","store/reducers/pastCard.ts","store/reducers/rootReducer.ts","reportWebVitals.ts","serviceWorkerRegistration.ts","index.tsx"],"names":["LoaderStatus","PastCard","CITIES","name","disabled","hidden","lat","showLoaderForcast","type","SHOW_LOADER_FORECAST","hideLoaderForcast","HIDE_LOADER_FORECAST","showLoaderPast","SHOW_LOADER_PAST","hideLoaderPast","HIDE_LOADER_PAST","getDate","unixDate","GET_DATE","Days7Forecast","PastData","axios","create","baseURL","source","CancelToken","isCancel","validateThrown","something","error","codeIsCorrect","code","messageIsCorrect","message","isServerError","console","log","API_KEY","process","REACT_APP_API_REY","fetch7DayForecast","lon","part","dispatch","a","url","get","cancelToken","token","response","FETCH_7DAYSFORECAST","data","fetchPastForecast","getState","pastCardInfo","cityLocation","FETCH_PAST_FORECAST","getLocation","GET_LOCATION","app","getWeater","useActions","useDispatch","bindActionCreators","UserActions","positionError","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","SelectCity","forecast7DaysData","useEffect","setGeoHandler","getIncomeLocation","navigator","registerProtocolHandler","window","addEventListener","geoData","URL","location","toString","searchParams","incomeLocation","split","latitude","parseFloat","longitude","geoOptions","enableHighAccuracy","timeout","maximumAge","setCurrentPosition","position","coords","cls","Object","keys","length","className","onChange","e","target","value","geolocation","getCurrentPosition","join","defaultValue","map","option","Loader","unixTimestamp","date","Date","dd","yyyy","getFullYear","getMonth","toStrMonth","_path","UnitForecast","props","forecastDataToShow","forecastData","useSelector","state","screen","width","currentShowCards","daily","card","day","dt","temp","Math","round","eve","weather","result","icon","src","alt","description","id","Placeholder","Fragment","image","useTypedSelector","CardForcast","loading7DaysForecast","cardsToShow","useRef","useState","setCurrentShowCards","isInctiveNext","current","includes","isAIntivePrev","clsPrev","clsNext","trim","onClick","prevCards","prev","nextCards","SelectCityPast","today","getTime","fiveDaysAgo","toJSON","slice","oneDayAgo","SelectDate","inputRef","wrapperRef","input","wrapper","addClass","classList","add","removeClass","remove","removeEventListener","ref","now","min","max","UnitPast","pastDataForecast","pastData","hourResult","hourly","CardPast","loadingPastForecast","_extends","assign","i","arguments","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgOfflineIcon","_ref","svgRef","title","titleId","xmlns","xmlnsXlink","x","y","viewBox","style","enableBackground","xmlSpace","d","ForwardRef","Header","checkNetworkStatus","isOnline","setIsOnline","onLine","Footer","App","initialState","appReducer","action","forecastDataReducer","pastDataReducer","pastCardReducer","rootReducer","combineReducers","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById","href","origin","fetch","headers","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.39e6704c.chunk.js","sourcesContent":["\nexport interface IStateLoading {\n  loading7DaysForecast: boolean\n  loadingPastForecast: boolean\n};\n\ntype ShowLoaderForcast = {\n  type: LoaderStatus.SHOW_LOADER_FORECAST;\n};\n\ntype HideLoaderForcast = {\n  type: LoaderStatus.HIDE_LOADER_FORECAST;\n};\n\ntype ShowLoaderPast = {\n  type: LoaderStatus.SHOW_LOADER_PAST;\n};\n\ntype HideLoaderPast = {\n  type: LoaderStatus.HIDE_LOADER_PAST;\n};\n\nexport type AppAction = ShowLoaderForcast | HideLoaderForcast |\n                  ShowLoaderPast | HideLoaderPast\n\nexport enum LoaderStatus {\n  SHOW_LOADER_FORECAST = 'SHOW_LOADER_FORECAST',\n  HIDE_LOADER_FORECAST = 'HIDE_LOADER_FORECAST',\n  SHOW_LOADER_PAST = 'SHOW_LOADER_PAST',\n  HIDE_LOADER_PAST = 'HIDE_LOADER_PAST'\n};\n\n\n","export interface IPastCardState {\n  unixDate: null | number,\n  cityLocation: null | string,\n};\n\nexport enum PastCard {\n  GET_DATE = 'GET_DATE',\n  GET_LOCATION = 'GET_LOCATION'\n};\n\nexport type PastCardAction = {\n  type: string,\n  unixDate: number,\n  cityLocation:string\n};","interface ICities {\n  name: 'Select city' | 'Samara' | 'Tolyatti'\n        | 'Saratov' | 'Kazan'\n        | 'Krasnodar' | 'Сurrent location'\n  lat?: '53.195873' | '53.507836' | '51.533557'\n      | '55.796127' | '45.035470' | 'current'\n  disabled?: boolean,\n  hidden?:boolean\n};\n\nexport const CITIES: ICities[] = [\n  { name: 'Select city', disabled: true, hidden: true },\n  { name: 'Samara', lat: '53.195873' },\n  { name: 'Tolyatti', lat: '53.507836' },\n  { name: 'Saratov', lat: '51.533557' },\n  { name: 'Kazan', lat: '55.796127' },\n  { name: 'Krasnodar', lat: '45.035470' },\n  { name: 'Сurrent location', lat: 'current' },\n];","import { LoaderStatus } from '../../types/app';\n\n\nexport function showLoaderForcast() {\n  return {\n    type: LoaderStatus.SHOW_LOADER_FORECAST\n  }\n}\n\nexport function hideLoaderForcast() {\n  return {\n    type: LoaderStatus.HIDE_LOADER_FORECAST\n  }\n}\n\nexport function showLoaderPast() {\n  return {\n    type: LoaderStatus.SHOW_LOADER_PAST\n  }\n}\n\nexport function hideLoaderPast() {\n  return {\n    type: LoaderStatus.HIDE_LOADER_PAST\n  }\n}","import { PastCard } from '../../types/pastCard';\n\n\nexport function getDate(unixDate: number) {\n  return {\n    type: PastCard.GET_DATE,\n    unixDate\n }\n}","interface IWeatherData {\n  icon: string\n  id: number\n  description: string\n};\n\nexport interface IForecastData {\n  dt: number\n  temp: { eve: number }\n  weather: IWeatherData[]\n};\n\nexport enum Days7Forecast {\n  FETCH_7DAYSFORECAST = 'FETCH_7DAYSFORECAST'\n};\n\nexport type Days7ForecastAction = {\n  type: Days7Forecast.FETCH_7DAYSFORECAST,\n  data: IForecastData\n}\n\n\n\n\n","interface IWeather {\n  icon: string,\n  id: number,\n  description: string,\n};\n\ninterface IHourly {\n  temp: number\n  weather: IWeather[]\n};\n\n\nexport interface IPastData {\n  current: { dt: number }\n  hourly: IHourly[]\n};\n\nexport type PastDataAction = {\n  type: PastData.FETCH_PAST_FORECAST;\n  data: IPastData;\n};\n\nexport enum PastData {\n  FETCH_PAST_FORECAST = 'FETCH_PAST_FORECAST'\n};\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://api.openweathermap.org/data/2.5'\n})\n\nconst cancelToken = axios.CancelToken;\nexport const source = cancelToken.source();\n\nexport const isCancel = axios.isCancel;\n\n\n\n/* const instance = axios.create();\ninstance.CancelToken = axios.CancelToken;\ninstance.isCancel = axios.isCancel; */","import axios from '../../axios/axios';\nimport { source } from '../../axios/axios';\nimport { isCancel } from '../../axios/axios';\nimport { Days7Forecast, IForecastData } from '../../types/forecastData';\nimport { IPastData, PastData } from '../../types/pastData';\nimport {\n  hideLoaderPast, showLoaderForcast,\n  showLoaderPast, hideLoaderForcast,\n} from './app';\n\n\ntype ServerError = {\n  code: number;\n  message: string;\n};\n\ntype SityLocation = {\n  lat: string,\n  lon: string\n};\n  \nconst isServerError = (error: any): error is ServerError => {\n  if (!error) return false; // null, undefined, ''\n  \n  const codeIsCorrect = typeof error.code === 'number';\n  const messageIsCorrect = typeof error.message === 'string';\n  \n  return codeIsCorrect && messageIsCorrect;\n};\n\nconst validateThrown = (something: string | ServerError): void => {\n  if (isServerError(something)) {\n    console.error(`Error code: ${something.code}, message: ${something.message}`);\n  } else {\n    console.log('something is not an server error');\n  }\n};\n\nconst API_KEY = process.env.REACT_APP_API_REY;\n\nexport function fetch7DayForecast(lat: string, lon: string, part:string = '') {\n\n  return async dispatch => {\n    try {\n\n      dispatch(showLoaderForcast());\n\n      const url: string =\n        `/onecall?lat=${lat}&lon=${lon}&exclude=${part}&units=metric&appid=${API_KEY}`;\n      const response =\n        await axios.get<IForecastData[]>(url, { cancelToken: source.token });\n\n      dispatch({\n        type: Days7Forecast.FETCH_7DAYSFORECAST,\n        data: response.data\n      });\n\n      dispatch(hideLoaderForcast());\n\n    } catch (thrown: any) {\n      validateThrown(thrown);\n      if (isCancel(thrown)) {\n        console.log('Request canceled', thrown.message);\n        /* dispatch(showAlert('Что-то пошло не так...', 'danger')) */\n        dispatch(hideLoaderForcast());\n      } else {\n        /* dispatch(showAlert('Что-то пошло не так...', 'danger')) */\n        dispatch(hideLoaderForcast());\n      }\n    }\n  }\n};\n\nexport function fetchPastForecast() {\n  /* return async (dispatch: Dispatch<IPastDataAction>, getState) => { */\n  return async (dispatch, getState) => {\n\n    const { pastCardInfo } = getState();\n    \n    let unixDate:number | null = pastCardInfo.unixDate;\n    let cityLocation:SityLocation | null = pastCardInfo.cityLocation;\n\n    if (unixDate === null || cityLocation === null) return;\n    \n    const { lat, lon } = cityLocation;\n    \n    try {\n      dispatch(showLoaderPast());\n\n      const url: string =\n        `/onecall/timemachine?lat=${lat}&lon=${lon}&dt=${unixDate}&units=metric&appid=${API_KEY}`;\n      const response = await axios.get<IPastData>(url, { cancelToken: source.token });\n\n      dispatch({\n        type: PastData.FETCH_PAST_FORECAST,\n        data: response.data\n      });\n\n      dispatch(hideLoaderPast());\n\n    } catch (thrown: any) {\n      validateThrown(thrown);\n      if (isCancel(thrown)) {\n        console.log('Request canceled', thrown.message);\n        /* dispatch(showAlert('Что-то пошло не так...', 'danger')) */\n        dispatch(hideLoaderPast());\n      } else {\n        /* dispatch(showAlert('Что-то пошло не так...', 'danger')) */\n        dispatch(hideLoaderPast());\n      }\n    }\n  }\n};\n\n\n","import { PastCard } from '../../types/pastCard';\nimport { fetchPastForecast } from './getWeather';\n\n\nexport function getLocation(lat: string, lon: string) {\n\n  return dispatch => {\n    dispatch({\n      type: PastCard.GET_LOCATION,\n      cityLocation: { lat, lon }\n    });\n    dispatch(fetchPastForecast());\n }\n}","import * as app from './app';\nimport * as getDate from './getDate';\nimport * as getLocation from './getLocation';\nimport * as getWeater from './getWeather';\n\n\nexport default {\n  ...app,\n  ...getDate,\n  ...getLocation,\n  ...getWeater\n}","import { useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport UserActions from '../store/actions';\n\n\nexport const useActions = () => {\n  const dispatch = useDispatch()\n  return bindActionCreators(UserActions, dispatch)\n}","export default function positionError(error:GeolocationPositionError) { \nswitch ( error.code ) { \n case error.PERMISSION_DENIED: \n  console.error( \"User denied the request for Geolocation.\" ); \n   break;\n case error.POSITION_UNAVAILABLE: \n  console.error( \"Location information is unavailable.\" ); \n   break; \n case error.TIMEOUT: \n  console.error(\"The request to get user location timed out.\");    \n    break;\n default:\n  console.error(`Code: ${error.code}: ${error.message}`);\n    break;\n  }\n}","import './select-city.scss';\nimport { CITIES } from '../../cities/cities';\nimport { useActions } from '../../hooks/useActions';\nimport positionError from '../../utils/positionError';\nimport { useEffect } from 'react';\n\n\nconst SelectCity = ({ forecast7DaysData }) => {\n\n  useEffect(() => {\n    setGeoHandler();\n    getIncomeLocation();\n  }, []);\n  \n\n  const { fetch7DayForecast } = useActions();\n\n  const setGeoHandler = (): void => {\n    if ('registerProtocolHandler' in navigator) {\n      navigator.registerProtocolHandler(\n        'geo', '/weather-forecast/?geo=%s', 'Geo-handler'\n      );\n    }\n  }\n\n  const getIncomeLocation = (): void => {\n    window.addEventListener('load', () => {\n      const url = new URL(window.location.toString());\n      const { searchParams } = url;\n      const geoData = searchParams.get('geo')?.toString();\n      try {\n        if (geoData) {\n          const incomeLocation = geoData.split(':')[1]?.split(',');\n          const latitude = parseFloat(incomeLocation[0]).toString();\n          const longitude = parseFloat(incomeLocation[1]).toString();\n          fetch7DayForecast(latitude, longitude);\n        }\n      } catch(error) {\n        console.error(error.message);\n      }\n    });\n  }\n\n  const geoOptions:PositionOptions = {\n    enableHighAccuracy: true, \n    timeout: 1500,\n    maximumAge: 0,\n  }\n\n  const setCurrentPosition = (position: GeolocationPosition): void => {\n    const latitude = position.coords.latitude.toString(); \n    const longitude = position.coords.longitude.toString();\n    fetch7DayForecast(latitude, longitude);\n  }\n\n  const setCityLocation = e => {\n    if (e.target.value === 'current') {\n      const handleCurrentLocation = () => {\n        if (navigator.geolocation) { \n          navigator.geolocation.getCurrentPosition(\n            setCurrentPosition, positionError, geoOptions\n          );\n        } \n      }\n      handleCurrentLocation();\n    }\n    /* eslint-disable */\n    let longitude = '';\n    let latitude = e.target.value;\n    switch (latitude) {\n     case '53.195873': // Самара\n      return fetch7DayForecast(latitude, longitude = '50.100193');\n     case '53.507836': // Тольятти\n      return fetch7DayForecast(latitude, longitude = '49.420393');\n     case '51.533557': // Саратов\n      return fetch7DayForecast(latitude, longitude = '46.034257');\n     case '55.796127': // Казань\n      return fetch7DayForecast(latitude, longitude = '49.106405');  \n     case '45.035470': // Краснодар\n      return fetch7DayForecast(latitude, longitude = '38.975313');\n     default: return;\n    }\n  }\n  \n  let isEmptyForecast = Object.keys(forecast7DaysData);\n  const cls = [\n    'select-future__city',\n    isEmptyForecast.length ? 'select-future__city--active' : null,\n  ];\n\n  return (\n    <form className=\"card-forcast__select select-future\">\n      <select \n        onChange={ setCityLocation }\n        className={ cls.join(' ') }\n        defaultValue=\"Select city\"\n      >\n      {\n        CITIES.map(option => (\n          <option\n            key={ option.name }\n            value={ option.lat }\n            disabled={ option.disabled }\n            hidden={ option.hidden }\n          >\n            { option.name }\n          </option>\n        ))  \n      }\n      </select>\n    </form>\n  )\n}\n\nexport default SelectCity;","import React from 'react';\nimport './Loader.scss';\n\nconst Loader: React.FC = () => (\n  \n    <div className='loader-centre'>\n      <div className=\"lds-roller\">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n)\n\nexport default Loader;","\nexport function getDate(unixTimestamp:number):string {\n\n  const date = new Date(unixTimestamp * 1000);\n\n  let dd: number | string = date.getDate();\n  \n  if (dd < 10) { dd = '0' + dd };\n\n  const yyyy: number = date.getFullYear();\n  \n  type Date = 'jan' | 'feb' | 'mar' |\n              'apr' | 'may' | 'jun' |\n              'jul' | 'aug' | 'sep' |\n              'oct' | 'nov' | 'dec' | undefined;\n\n  function toStrMonth():Date {\n    const mm:number = date.getMonth() + 1;\n    switch (mm) {\n      case 1: return 'jan';\n      case 2: return 'feb';\n      case 3: return 'mar';\n      case 4: return 'apr';\n      case 5: return 'may';\n      case 6: return 'jun';\n      case 7: return 'jul';\n      case 8: return 'aug';\n      case 9: return 'sep';\n      case 10: return 'oct';\n      case 11: return 'nov';\n      case 12: return 'dec';\n      default: return;\n   }\n  }\n\n  const mm:Date = toStrMonth();\n  const currentDate:string = dd + ' ' + mm + ' ' + yyyy;\n\n  return currentDate\n}","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgOfflineIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 512 512\",\n    style: {\n      enableBackground: \"new 0 0 512 512\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M378.6,206.6C367.2,149.2,316.7,106,256,106c-24.6,0-47.5,7.2-66.8,19.5l24.3,24.3c12.8-6.6,27.2-10.5,42.5-10.5 c50.7,0,91.7,41,91.7,91.7v8.3h25c27.6,0,50,22.4,50,50c0,18.9-10.6,35.2-26.1,43.7l24.2,24.2c21.2-15.1,35.2-39.8,35.2-67.8 C456,245.3,421.8,209.7,378.6,206.6z M106,127.3l45.8,45.7c-53.2,2.2-95.8,46-95.8,99.7c0,55.3,44.7,100,100,100h195.4l33.3,33.3 l21.2-21.2L127.3,106L106,127.3z M184.8,206l133.3,133.3H156c-36.8,0-66.7-29.8-66.7-66.7S119.2,206,156,206H184.8z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgOfflineIcon);\nexport default __webpack_public_path__ + \"static/media/offline-icon.e91e3700.svg\";\nexport { ForwardRef as ReactComponent };","import { FC } from 'react';\nimport { getDate } from '../../utils/getDate';\nimport './unit-forecast.scss';\nimport { IForecastData } from '../../types/forecastData';\nimport { useSelector } from 'react-redux';\n\n\ninterface IunitProps {\n  currentShowCards: IForecastData[]\n};\n\ninterface IRootState {\n  forecastData: {\n    daily: IForecastData[]\n  }\n};\n\nconst UnitForecast: FC<IunitProps> = props => {\n  \n  let forecastData = useSelector((state: IRootState) => state.forecastData);\n  let forecastDataToShow;\n\n  if (window.screen.width > 768 && !!props.currentShowCards.length) {\n      \n    forecastDataToShow = props.currentShowCards;\n  } else if (window.screen.width < 768) {\n    \n    forecastDataToShow = forecastData.daily;  \n  } else {\n    \n      const cards:number[] = [0, 1, 2];\n      forecastDataToShow = cards.map(card => {\n        return forecastData.daily[card]\n      }); \n    };\n  \n    return forecastDataToShow.map(day => {\n \n    const date:string = getDate(day.dt);\n    const temp:number = Math.round(day.temp.eve);\n    return (\n        <div \n        key={ day.dt }\n        className=\"unit-forecast\"\n        >\n          <p className=\"unit-forecast__date\">\n            { date }\n          </p>\n        {\n          day.weather.map(result => {\n\n            let url = 'http://openweathermap.org/img/wn/' + result.icon + '@2x.png';\n            return (\n              <img\n                key={ result.id }\n                className=\"unit-forecast__image\"\n                src={ url }\n                alt={ result.description }\n              />\n            )\n          })\n        }\n          <div className=\"unit-forecast__tmp\">\n            <span className=\"unit-forecast__num\">\n              { temp >= 0 ? `+${temp}` : temp }\n            </span>\n            <span>°</span>\n          </div>\n        </div>\n    )\n  })\n}\n\nexport default UnitForecast;","export default __webpack_public_path__ + \"static/media/placeholder.a6938fd6.svg\";","import React from 'react';\nimport image from '../../assets/images/placeholder.svg';\nimport './placeholder.scss';\n\nconst Placeholder: React.FC = () => {\n  return (\n    <React.Fragment>\n      <img\n       className=\"card-forcast__placeholder\"\n       src={ image }\n       alt=\"картинка вместо погоды\"\n      />\n      <p className=\"card-forcast__text\">\n        Fill in all the fields and\n        the weather will be displayed\n      </p>    \n    </React.Fragment>\n  )\n}\n\nexport default Placeholder;","import { TypedUseSelectorHook, useSelector } from 'react-redux';\nimport { RootState } from '../store/reducers/rootReducer';\n\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;","import React, { useRef, useState } from 'react';\nimport './card-forcast.scss';\nimport SelectCity from '../select-city/SelectCity';\nimport Loader from '../loader/Loader';\nimport UnitForecast from '../unit-forecast/UnitForecast';\nimport Placeholder from '../placeholder/Placeholder';\nimport { IForecastData } from '../../types/forecastData';\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\nimport { useSelector } from 'react-redux';\n\n\nconst CardForcast: React.FC = () => {\n\n  const { loading7DaysForecast } = useTypedSelector((state) => state.app);\n  const forecast7DaysData = useSelector((state: any) => state.forecastData);\n\n  const cardsToShow = useRef<number[]>([0, 1, 2]);\n  const [currentShowCards, setCurrentShowCards] = useState<IForecastData[]>([]);\n\n  const isInctiveNext:boolean = cardsToShow.current.includes(7);\n  const isAIntivePrev:boolean = cardsToShow.current.includes(0);\n\n  const setNextCards = () => {\n    if (isInctiveNext) return;\n    \n    const nextCards = cardsToShow.current.map(card => {\n      return card + 1\n    });\n    cardsToShow.current = nextCards;\n    \n    const currentShowCards: any = nextCards.map(card => {\n      return forecast7DaysData.daily[card]\n    });\n\n    setCurrentShowCards(prev => currentShowCards);\n  };\n\n  const setPrevCards = () => {\n    if (isAIntivePrev) return;\n    \n    const prevCards = cardsToShow.current.map(card => {\n      return card - 1\n    });\n    cardsToShow.current = prevCards;\n\n    const currentShowCards: any = prevCards.map(card => {\n      return forecast7DaysData.daily[card]\n    });\n\n    setCurrentShowCards(prev => currentShowCards);\n  };\n\n  const clsPrev = [\n    'arrow arrow-prev',\n    isAIntivePrev ? 'arrow--disabled' : '',\n  ];\n\n  const clsNext = [\n    'arrow arrow-next',\n    isInctiveNext ? 'arrow--disabled' : '',\n  ];\n  \n  return (\n    \n    <article className=\"card-forcast card-forcast--future\">\n      <h3 className=\"card-forcast__title\">\n        7 Days Forecast\n      </h3>\n      <SelectCity forecast7DaysData={ forecast7DaysData } />\n      {\n        loading7DaysForecast ? <Loader /> :\n        forecast7DaysData.daily ?\n            <div className=\"card-forcast__wrapper\">\n              <div className=\"card-forcast__overflow\">\n              <UnitForecast currentShowCards={ currentShowCards } />\n                <button\n                  className={ clsPrev.join(' ').trim() }\n                  onClick={ setPrevCards }\n                />\n                <button\n                  className={ clsNext.join(' ').trim() }\n                  onClick={ setNextCards }\n                />\n              </div>\n            </div>\n            : <Placeholder />\n      }\n    </article>\n  )\n}\n\nexport default CardForcast;","import './select-city-past.scss';\nimport { CITIES } from '../../cities/cities';\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\nimport { useActions } from '../../hooks/useActions';\nimport positionError from '../../utils/positionError';\n\n\nconst SelectCityPast: React.FC = () => {\n\n  const { getLocation } = useActions();\n  const cityLocation = useTypedSelector((state) => state.pastCardInfo.cityLocation);\n\n  const geoOptions:PositionOptions = {\n    enableHighAccuracy: true, \n    timeout: 1500,\n    maximumAge: 0,\n  }\n\n  const setCurrentPosition = (position: GeolocationPosition): void => {\n    const latitude = position.coords.latitude.toString(); \n    const longitude = position.coords.longitude.toString();\n    getLocation(latitude, longitude);\n  }\n\n  const setCityLocation = e => {\n    if (e.target.value === 'current') {\n      const handleCurrentLocation = () => {\n        if (navigator.geolocation) { \n          navigator.geolocation.getCurrentPosition(\n            setCurrentPosition, positionError, geoOptions\n          );\n        } \n      }\n      handleCurrentLocation();\n    }\n    /* eslint-disable */\n    let longitude = '';\n    let latitude = e.target.value;\n    switch (latitude) {\n     case '53.195873': // Самара\n        return getLocation(latitude, longitude = '50.100193');\n     case '53.507836': // Тольятти\n        return getLocation(latitude, longitude = '49.420393');\n     case '51.533557': // Саратов\n        return getLocation(latitude, longitude = '46.034257');\n     case '55.796127': // Казань\n        return getLocation(latitude, longitude = '49.106405');\n     case '45.035470': // Краснодар\n        return getLocation(latitude, longitude = '38.975313');\n     default: return;\n    }\n  }\n\n  const cls = [\n    'select-past__city',\n    cityLocation === null ? null : 'select-past__city--active',\n  ];\n\n  return (\n      <select\n        onChange={ setCityLocation }\n        className={ cls.join(' ').trim() }\n        defaultValue=\"Select city\"\n      >\n      {\n        CITIES.map(option => (\n          <option\n            key={option.name}\n            value={option.lat}\n            disabled={option.disabled}\n            hidden={option.hidden}\n          >\n            {option.name}\n          </option>\n        ))  \n      }\n      </select>\n  )\n}\n\nexport default SelectCityPast;","const today = new Date().getTime()\nconst days = 86400000 //number of milliseconds in a day\nconst fiveDaysAgo:string = new Date(today - (5 * days)).toJSON().slice(0, 10)\n\nexport default fiveDaysAgo","const today = new Date().getTime()\nconst days = 86400000 //number of milliseconds in a day\nconst oneDayAgo:string = new Date(today - (1 * days)).toJSON().slice(0, 10)\n\nexport default oneDayAgo","import React, { useEffect, useRef } from 'react';\nimport './select-date.scss';\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\nimport fiveDaysAgo from '../../utils/to5DaysAgo';\nimport oneDayAgo from '../../utils/to1DayAgo';\nimport { useActions } from '../../hooks/useActions';\n\n\nconst SelectDate:React.FC = () => {\n\n  const { unixDate } = useTypedSelector((state) => state.pastCardInfo);\n  \n  const inputRef = useRef<HTMLInputElement>(null);\n  const wrapperRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n\n    const input:HTMLInputElement | null = inputRef.current;\n    const wrapper:HTMLDivElement | null = wrapperRef.current;\n\n    const addClass = () => {\n      wrapper!.classList.add('select-past__hide-placeholder');\n    }\n\n    const removeClass = () => {\n      wrapper!.classList.remove('select-past__hide-placeholder');\n    }\n\n    input!.addEventListener('focus', addClass);\n\n    if (!unixDate) {\n      input!.addEventListener('blur', removeClass);\n    }\n    \n    return () => {\n      input!.removeEventListener('focus', addClass);\n      input!.removeEventListener('blur', removeClass);\n    }\n\n  }, [unixDate]);\n\n  const { getDate, fetchPastForecast } = useActions();\n\n  const setDate = (e:React.ChangeEvent<HTMLInputElement>) => {\n\n    const date = e.target.value;\n    const unixDate = new Date(`${date}`).getTime() / 1000;\n\n    if (unixDate > Date.now() / 1000) return;\n\n    getDate(unixDate);\n    fetchPastForecast();\n  };\n\n  const cls = [\n    'select-past__date',\n    unixDate === null ? null : 'select-past__date--active',\n  ];\n\n  return (\n    <div\n      className=\"select-past__wrapper\"\n      ref={ wrapperRef }\n    >\n      <input\n        className={ cls.join(' ').trim() }\n        type=\"date\"\n        ref={ inputRef }\n        onChange={setDate}\n        min={fiveDaysAgo}\n        max={oneDayAgo}\n      />\n      <p className=\"select-past__placeholder\">\n        Select date\n      </p>\n    </div>\n  )\n}\n\nexport default SelectDate;","import React from 'react';\nimport './unit-past.scss';\nimport { getDate } from '../../utils/getDate';\nimport { IPastData } from '../../types/pastData';\nimport { useSelector } from 'react-redux';\n\n\ninterface IPastState {\n  pastData:IPastData\n};\n\nconst UnitPast:React.FC = () => {\n  \n  const pastDataForecast = useSelector((state: IPastState) => state.pastData);\n\n  const hourResult = pastDataForecast.hourly[11]; // 11:00\n\n  const date:string = getDate(pastDataForecast.current.dt);\n  const temp:number = Math.round(hourResult.temp);\n\n  return (\n    <div className=\"card-forcast__unit unit-past\">\n      <p className=\"unit-past__date\">\n        { date }\n      </p>\n      {\n        hourResult.weather.map(result => {\n\n          let url = 'http://openweathermap.org/img/wn/' + result.icon + '@2x.png';\n          return (\n            <img\n              key={ result.id }\n              className=\"unit-past__image\"\n              src={ url }\n              alt={ result.description }\n            />\n          )\n        })\n      }\n      <div className=\"unit-past__tmp\">\n        <span className=\"unit-past__num\">\n        { temp >= 0 ? `+${temp}` : temp }\n        </span>\n        <span>°</span>\n      </div>\n    </div>\n  )\n}\n\nexport default UnitPast;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Loader from '../loader/Loader';\nimport SelectCityPast from '../select-city-past/selectCityPast';\nimport SelectDate from '../select-date/SelectDate';\nimport UnitPast from '../unit-past/UnitPast';\nimport Placeholder from '../placeholder/Placeholder'\nimport { IStateLoading } from '../../types/app';\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\nimport { IPastData } from '../../types/pastData';\n\n\ninterface ILoading {\n  app:IStateLoading\n};\n\ninterface IPastState {\n  pastData: IPastData\n};\n\nconst CardPast: React.FC = () => {\n\n  const { loadingPastForecast } = useTypedSelector((state:ILoading) => state.app);\n  const pastDataForecast = useSelector((state:IPastState) => state.pastData);\n\n  return (\n    <article className=\"card-forcast card-forcast--past\">\n      <h3 className=\"card-forcast__title card-forcast__title--left\">\n        Forecast for a Date in the Past\n      </h3>\n      <form className=\"card-forcast__select select-past\">\n        <SelectCityPast />\n        <SelectDate />\n      </form>\n      {\n        loadingPastForecast ? <Loader /> :\n        pastDataForecast.hourly ?\n        <UnitPast /> : <Placeholder />\n      }\n    </article>\n  )\n}\n\nexport default CardPast;","import React, { useState, useEffect } from 'react';\nimport { ReactComponent as IconOffline } from '../../assets/images/offline-icon.svg';\nimport './header.scss';\n\nconst Header:React.FC = (): JSX.Element => {\n\n  useEffect(() => { \n    checkNetworkStatus();\n    window.addEventListener('online', checkNetworkStatus);\n    window.addEventListener('offline', checkNetworkStatus);\n  }, []);\n\n  const [isOnline, setIsOnline] = useState<boolean>(true);\n\n  const checkNetworkStatus = (): void => {\n    navigator.onLine ?\n      setIsOnline(true)\n      : setIsOnline(false)\n  };\n\n  return (\n    <header className=\"main-title\">\n      {!isOnline &&\n        <IconOffline\n          className=\"status-icon\"\n          title=\"offline\"\n        />}\n      <h2>\n        Weather\n      </h2>\n      <h2>\n        forecast\n      </h2>\n    </header>\n  )\n};\n\nexport default Header;","import React from 'react';\nimport './footer.scss';\n\nconst Footer: React.FC = () => (\n  <footer className=\"footer\">\n   <p>C ЛЮБОВЬЮ ОТ MERCURY DEVELOPMENT</p>\n  </footer> \n)\n\nexport default Footer;\n\n","import React from 'react';\nimport CardForcast from './components/card-forcast/CardForcast';\nimport CardPast from './components/card-past/CardPast';\nimport Title from './components/header/Header';\nimport './app.scss';\nimport Footer from './components/footer/Footer';\n\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"wrapper\">\n      <Title />\n      <main className=\"container\">\n       <CardForcast />\n       <CardPast />\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import {\n  IStateLoading,\n  LoaderStatus, AppAction\n} from '../../types/app';\n\n\nlet initialState:IStateLoading = {\n  loading7DaysForecast: false,\n  loadingPastForecast: false,\n}\n\nconst appReducer = (\n  state = initialState, action: AppAction\n): IStateLoading => {\n  switch (action.type) {\n    case LoaderStatus.SHOW_LOADER_FORECAST:\n      return { ...state, loading7DaysForecast: true }\n    case LoaderStatus.HIDE_LOADER_FORECAST:\n      return { ...state, loading7DaysForecast: false }\n    case LoaderStatus.SHOW_LOADER_PAST:\n      return { ...state, loadingPastForecast: true }\n    case LoaderStatus.HIDE_LOADER_PAST:\n      return { ...state, loadingPastForecast: false }\n    default: return state\n  }\n}\n\nexport default appReducer;","import {\n  Days7Forecast,\n  Days7ForecastAction\n} from '../../types/forecastData';\n\n\n/* type WeatherData = {\n  icon: string\n  id: number | null\n  description: string\n}\n\nexport type DailyData = {\n  dt: number | null\n  temp: { eve: number | null }\n  weather: WeatherData[]\n}\n\nexport type ForecastData = {\n  daily: DailyData[]\n}\n\nconst initialState: ForecastData = {\n  daily: [\n    {\n      dt: null,\n      temp: { eve: null },\n      weather: [{\n        icon: '',\n        description: '',\n        id: null\n       } ]\n    }\n  ]\n}; */\n\nconst initialState = {};\n\nconst forecastDataReducer = (\n  state = initialState, action: Days7ForecastAction) => {\n  switch (action.type) {\n    case Days7Forecast.FETCH_7DAYSFORECAST:\n      return { ...state, ...action.data };\n    default: return state;\n  }\n}\n\nexport default forecastDataReducer;","import { PastDataAction, PastData } from '../../types/pastData';\n\n/* let initialState = {\n  current: { dt: null },\n  hourly: [\n    {\n      temp: null,\n      weather: []\n   }\n  ],\n}; */\n\nlet initialState = {};\n\nconst pastDataReducer = (\n  state = initialState, action: PastDataAction) => {\n  switch (action.type) {\n    case PastData.FETCH_PAST_FORECAST:\n      return action.data;\n    default: return state;\n  }\n}\n\nexport default pastDataReducer;","import {\n  IPastCardState,\n  PastCard,\n  PastCardAction\n} from '../../types/pastCard';\n\n\nlet initialState: IPastCardState = {\n  unixDate: null,\n  cityLocation: null,\n};\n\nconst pastCardReducer = (\n  state = initialState, action: PastCardAction\n): IPastCardState => {\n  switch (action.type) {\n    case PastCard.GET_DATE:\n      return { ...state, unixDate: action.unixDate }\n    case PastCard.GET_LOCATION:\n      return { ...state, cityLocation: action.cityLocation }\n    default: return state;\n  }\n}\n\nexport default pastCardReducer;","import { combineReducers } from 'redux';\nimport appReducer from './app';\nimport forecastDataReducer from './forecastData';\nimport pastDataReducer from './pastData';\nimport pastCardReducer from './pastCard';\n\n\nconst rootReducer = combineReducers({\n  app: appReducer,\n  forecastData: forecastDataReducer,\n  pastData: pastDataReducer,\n  pastCardInfo: pastCardReducer,\n});\n\nexport default rootReducer;\n\nexport type RootState = ReturnType<typeof rootReducer>","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        console.log('No service worker found')\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './store/reducers/rootReducer';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}